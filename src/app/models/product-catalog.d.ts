/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/catalog": {
    /**
     * List or find Catalog objects
     * @description This operation list or find Catalog entities
     */
    get: operations["listCatalog"];
    /**
     * Creates a Catalog
     * @description This operation creates a Catalog entity.
     */
    post: operations["createCatalog"];
  };
  "/catalog/{id}": {
    /**
     * Retrieves a Catalog by ID
     * @description This operation retrieves a Catalog entity. Attribute selection is enabled for all first level attributes.
     */
    get: operations["retrieveCatalog"];
    /**
     * Deletes a Catalog
     * @description This operation deletes a Catalog entity.
     */
    delete: operations["deleteCatalog"];
    /**
     * Updates partially a Catalog
     * @description This operation updates partially a Catalog entity.
     */
    patch: operations["patchCatalog"];
  };
  "/category": {
    /**
     * List or find Category objects
     * @description This operation list or find Category entities
     */
    get: operations["listCategory"];
    /**
     * Creates a Category
     * @description This operation creates a Category entity.
     */
    post: operations["createCategory"];
  };
  "/category/{id}": {
    /**
     * Retrieves a Category by ID
     * @description This operation retrieves a Category entity. Attribute selection is enabled for all first level attributes.
     */
    get: operations["retrieveCategory"];
    /**
     * Deletes a Category
     * @description This operation deletes a Category entity.
     */
    delete: operations["deleteCategory"];
    /**
     * Updates partially a Category
     * @description This operation updates partially a Category entity.
     */
    patch: operations["patchCategory"];
  };
  "/productOffering": {
    /**
     * List or find ProductOffering objects
     * @description This operation list or find ProductOffering entities
     */
    get: operations["listProductOffering"];
    /**
     * Creates a ProductOffering
     * @description This operation creates a ProductOffering entity.
     */
    post: operations["createProductOffering"];
  };
  "/productOffering/{id}": {
    /**
     * Retrieves a ProductOffering by ID
     * @description This operation retrieves a ProductOffering entity. Attribute selection is enabled for all first level attributes.
     */
    get: operations["retrieveProductOffering"];
    /**
     * Deletes a ProductOffering
     * @description This operation deletes a ProductOffering entity.
     */
    delete: operations["deleteProductOffering"];
    /**
     * Updates partially a ProductOffering
     * @description This operation updates partially a ProductOffering entity.
     */
    patch: operations["patchProductOffering"];
  };
  "/productOfferingPrice": {
    /**
     * List or find ProductOfferingPrice objects
     * @description This operation list or find ProductOfferingPrice entities
     */
    get: operations["listProductOfferingPrice"];
    /**
     * Creates a ProductOfferingPrice
     * @description This operation creates a ProductOfferingPrice entity.
     */
    post: operations["createProductOfferingPrice"];
  };
  "/productOfferingPrice/{id}": {
    /**
     * Retrieves a ProductOfferingPrice by ID
     * @description This operation retrieves a ProductOfferingPrice entity. Attribute selection is enabled for all first level attributes.
     */
    get: operations["retrieveProductOfferingPrice"];
    /**
     * Deletes a ProductOfferingPrice
     * @description This operation deletes a ProductOfferingPrice entity.
     */
    delete: operations["deleteProductOfferingPrice"];
    /**
     * Updates partially a ProductOfferingPrice
     * @description This operation updates partially a ProductOfferingPrice entity.
     */
    patch: operations["patchProductOfferingPrice"];
  };
  "/productSpecification": {
    /**
     * List or find ProductSpecification objects
     * @description This operation list or find ProductSpecification entities
     */
    get: operations["listProductSpecification"];
    /**
     * Creates a ProductSpecification
     * @description This operation creates a ProductSpecification entity.
     */
    post: operations["createProductSpecification"];
  };
  "/productSpecification/{id}": {
    /**
     * Retrieves a ProductSpecification by ID
     * @description This operation retrieves a ProductSpecification entity. Attribute selection is enabled for all first level attributes.
     */
    get: operations["retrieveProductSpecification"];
    /**
     * Deletes a ProductSpecification
     * @description This operation deletes a ProductSpecification entity.
     */
    delete: operations["deleteProductSpecification"];
    /**
     * Updates partially a ProductSpecification
     * @description This operation updates partially a ProductSpecification entity.
     */
    patch: operations["patchProductSpecification"];
  };
  "/importJob": {
    /**
     * List or find ImportJob objects
     * @description This operation list or find ImportJob entities
     */
    get: operations["listImportJob"];
    /**
     * Creates a ImportJob
     * @description This operation creates a ImportJob entity.
     */
    post: operations["createImportJob"];
  };
  "/importJob/{id}": {
    /**
     * Retrieves a ImportJob by ID
     * @description This operation retrieves a ImportJob entity. Attribute selection is enabled for all first level attributes.
     */
    get: operations["retrieveImportJob"];
    /**
     * Deletes a ImportJob
     * @description This operation deletes a ImportJob entity.
     */
    delete: operations["deleteImportJob"];
  };
  "/exportJob": {
    /**
     * List or find ExportJob objects
     * @description This operation list or find ExportJob entities
     */
    get: operations["listExportJob"];
    /**
     * Creates a ExportJob
     * @description This operation creates a ExportJob entity.
     */
    post: operations["createExportJob"];
  };
  "/exportJob/{id}": {
    /**
     * Retrieves a ExportJob by ID
     * @description This operation retrieves a ExportJob entity. Attribute selection is enabled for all first level attributes.
     */
    get: operations["retrieveExportJob"];
    /**
     * Deletes a ExportJob
     * @description This operation deletes a ExportJob entity.
     */
    delete: operations["deleteExportJob"];
  };
  "/hub": {
    /**
     * Register a listener
     * @description Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
     */
    post: operations["registerListener"];
  };
  "/hub/{id}": {
    /**
     * Unregister a listener
     * @description Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
     */
    delete: operations["unregisterListener"];
  };
  "/listener/catalogCreateEvent": {
    /**
     * Client listener for entity CatalogCreateEvent
     * @description Example of a client listener for receiving the notification CatalogCreateEvent
     */
    post: operations["listenToCatalogCreateEvent"];
  };
  "/listener/catalogAttributeValueChangeEvent": {
    /**
     * Client listener for entity CatalogAttributeValueChangeEvent
     * @description Example of a client listener for receiving the notification CatalogAttributeValueChangeEvent
     */
    post: operations["listenToCatalogAttributeValueChangeEvent"];
  };
  "/listener/catalogStateChangeEvent": {
    /**
     * Client listener for entity CatalogStateChangeEvent
     * @description Example of a client listener for receiving the notification CatalogStateChangeEvent
     */
    post: operations["listenToCatalogStateChangeEvent"];
  };
  "/listener/catalogDeleteEvent": {
    /**
     * Client listener for entity CatalogDeleteEvent
     * @description Example of a client listener for receiving the notification CatalogDeleteEvent
     */
    post: operations["listenToCatalogDeleteEvent"];
  };
  "/listener/catalogBatchEvent": {
    /**
     * Client listener for entity CatalogBatchEvent
     * @description Example of a client listener for receiving the notification CatalogBatchEvent
     */
    post: operations["listenToCatalogBatchEvent"];
  };
  "/listener/categoryCreateEvent": {
    /**
     * Client listener for entity CategoryCreateEvent
     * @description Example of a client listener for receiving the notification CategoryCreateEvent
     */
    post: operations["listenToCategoryCreateEvent"];
  };
  "/listener/categoryAttributeValueChangeEvent": {
    /**
     * Client listener for entity CategoryAttributeValueChangeEvent
     * @description Example of a client listener for receiving the notification CategoryAttributeValueChangeEvent
     */
    post: operations["listenToCategoryAttributeValueChangeEvent"];
  };
  "/listener/categoryStateChangeEvent": {
    /**
     * Client listener for entity CategoryStateChangeEvent
     * @description Example of a client listener for receiving the notification CategoryStateChangeEvent
     */
    post: operations["listenToCategoryStateChangeEvent"];
  };
  "/listener/categoryDeleteEvent": {
    /**
     * Client listener for entity CategoryDeleteEvent
     * @description Example of a client listener for receiving the notification CategoryDeleteEvent
     */
    post: operations["listenToCategoryDeleteEvent"];
  };
  "/listener/productOfferingCreateEvent": {
    /**
     * Client listener for entity ProductOfferingCreateEvent
     * @description Example of a client listener for receiving the notification ProductOfferingCreateEvent
     */
    post: operations["listenToProductOfferingCreateEvent"];
  };
  "/listener/productOfferingAttributeValueChangeEvent": {
    /**
     * Client listener for entity ProductOfferingAttributeValueChangeEvent
     * @description Example of a client listener for receiving the notification ProductOfferingAttributeValueChangeEvent
     */
    post: operations["listenToProductOfferingAttributeValueChangeEvent"];
  };
  "/listener/productOfferingStateChangeEvent": {
    /**
     * Client listener for entity ProductOfferingStateChangeEvent
     * @description Example of a client listener for receiving the notification ProductOfferingStateChangeEvent
     */
    post: operations["listenToProductOfferingStateChangeEvent"];
  };
  "/listener/productOfferingDeleteEvent": {
    /**
     * Client listener for entity ProductOfferingDeleteEvent
     * @description Example of a client listener for receiving the notification ProductOfferingDeleteEvent
     */
    post: operations["listenToProductOfferingDeleteEvent"];
  };
  "/listener/productOfferingPriceCreateEvent": {
    /**
     * Client listener for entity ProductOfferingPriceCreateEvent
     * @description Example of a client listener for receiving the notification ProductOfferingPriceCreateEvent
     */
    post: operations["listenToProductOfferingPriceCreateEvent"];
  };
  "/listener/productOfferingPriceAttributeValueChangeEvent": {
    /**
     * Client listener for entity ProductOfferingPriceAttributeValueChangeEvent
     * @description Example of a client listener for receiving the notification ProductOfferingPriceAttributeValueChangeEvent
     */
    post: operations["listenToProductOfferingPriceAttributeValueChangeEvent"];
  };
  "/listener/productOfferingPriceStateChangeEvent": {
    /**
     * Client listener for entity ProductOfferingPriceStateChangeEvent
     * @description Example of a client listener for receiving the notification ProductOfferingPriceStateChangeEvent
     */
    post: operations["listenToProductOfferingPriceStateChangeEvent"];
  };
  "/listener/productOfferingPriceDeleteEvent": {
    /**
     * Client listener for entity ProductOfferingPriceDeleteEvent
     * @description Example of a client listener for receiving the notification ProductOfferingPriceDeleteEvent
     */
    post: operations["listenToProductOfferingPriceDeleteEvent"];
  };
  "/listener/productSpecificationCreateEvent": {
    /**
     * Client listener for entity ProductSpecificationCreateEvent
     * @description Example of a client listener for receiving the notification ProductSpecificationCreateEvent
     */
    post: operations["listenToProductSpecificationCreateEvent"];
  };
  "/listener/productSpecificationAttributeValueChangeEvent": {
    /**
     * Client listener for entity ProductSpecificationAttributeValueChangeEvent
     * @description Example of a client listener for receiving the notification ProductSpecificationAttributeValueChangeEvent
     */
    post: operations["listenToProductSpecificationAttributeValueChangeEvent"];
  };
  "/listener/productSpecificationStateChangeEvent": {
    /**
     * Client listener for entity ProductSpecificationStateChangeEvent
     * @description Example of a client listener for receiving the notification ProductSpecificationStateChangeEvent
     */
    post: operations["listenToProductSpecificationStateChangeEvent"];
  };
  "/listener/productSpecificationDeleteEvent": {
    /**
     * Client listener for entity ProductSpecificationDeleteEvent
     * @description Example of a client listener for receiving the notification ProductSpecificationDeleteEvent
     */
    post: operations["listenToProductSpecificationDeleteEvent"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description Base schema for adressable entities */
    Addressable: {
      /** @description unique identifier */
      id?: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
    };
    /** @description Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications. */
    AgreementRef: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the agreement */
      name?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    Any: Record<string, never>;
    /** @description Complements the description of an element (for instance a product) through video, pictures... */
    Attachment: {
      /**
       * @description Unique identifier for this particular attachment
       * @example 4aafacbd-11ff-4dc8-b445-305f2215715f
       */
      id?: string;
      /**
       * Format: uri
       * @description URI for this Attachment
       * @example http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
       */
      href?: string;
      /**
       * @description Attachment type such as video, picture
       * @example video
       */
      attachmentType?: string;
      /**
       * Format: base64
       * @description The actual contents of the attachment object, if embedded, encoded as base64
       */
      content?: string;
      /**
       * @description A narrative text describing the content of the attachment
       * @example Photograph of the Product
       */
      description?: string;
      /** @description Attachment mime type such as extension file for video, picture and document */
      mimeType?: string;
      /** @description The name of the attachment */
      name?: string;
      /**
       * Format: uri
       * @description Uniform Resource Locator, is a web page address (a subset of URI)
       * @example http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
       */
      url?: string;
      size?: components["schemas"]["Quantity"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures */
    AttachmentRef: {
      /** @description Unique-Identifier for this attachment */
      id: string;
      /**
       * Format: uri
       * @description URL serving as reference for the attachment resource
       */
      href?: string;
      /** @description A narrative text describing the content of the attachment */
      description?: string;
      /** @description Name of the related entity. */
      name?: string;
      /**
       * Format: uri
       * @description Link to the attachment media/content
       */
      url?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture. */
    AttachmentRefOrValue: {
      /**
       * @description Unique identifier for this particular attachment
       * @example 4aafacbd-11ff-4dc8-b445-305f2215715f
       */
      id?: string;
      /**
       * Format: uri
       * @description URI for this Attachment
       * @example http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f
       */
      href?: string;
      /**
       * @description Attachment type such as video, picture
       * @example video
       */
      attachmentType?: string;
      /**
       * Format: base64
       * @description The actual contents of the attachment object, if embedded, encoded as base64
       */
      content?: string;
      /**
       * @description A narrative text describing the content of the attachment
       * @example Photograph of the Product
       */
      description?: string;
      /** @description Attachment mime type such as extension file for video, picture and document */
      mimeType?: string;
      /** @description The name of the attachment */
      name?: string;
      /**
       * Format: uri
       * @description Uniform Resource Locator, is a web page address (a subset of URI)
       * @example http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f
       */
      url?: string;
      size?: components["schemas"]["Quantity"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering. */
    BundledProductOffering: {
      /** @description Unique identifier of the BundledProductOffering */
      id?: string;
      /** @description Unique reference of the BundledProductOffering */
      href?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the BundledProductOffering */
      name?: string;
      bundledProductOfferingOption?: components["schemas"]["BundledProductOfferingOption"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description A set of numbers that specifies the lower and upper limits for a ProductOffering that can be procured as part of the related BundledProductOffering. Values can range from 0 to unbounded */
    BundledProductOfferingOption: {
      /** @description Default number of produc offereings that should be procured as part of the related BundledProductOffering */
      numberRelOfferDefault?: number;
      /** @description lower limit for a product offering that can be procured as part of the related BundledProductOffering */
      numberRelOfferLowerLimit?: number;
      /** @description upper limit for a product offering that can be procured as part of the related BundledProductOffering */
      numberRelOfferUpperLimit?: number;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description This represents a bundling pricing relationship, allowing a price to be composed of multiple other prices (e.g. a recurring charge and a onetime charge). */
    BundledProductOfferingPriceRelationship: {
      /** @description Unique identifier of the bundled product offering price */
      id?: string;
      /** @description hyperlink reference of the bundled product offering price */
      href?: string;
      /** @description Name of the bundled product offering price */
      name?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification. */
    BundledProductSpecification: {
      /** @description Unique identifier of the product specification */
      id?: string;
      /** @description Reference of the product specification */
      href?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the product specification */
      name?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description A collection of Product Offerings, intended for a specific DistributionChannel, enhanced with additional information such as SLA parameters, invoicing and shipping details */
    Catalog: {
      /** @description Unique identifier of the Catalog */
      id?: string;
      /** @description Unique reference of the catalog */
      href?: string;
      /** @description Indicates if the catalog is a product, service or resource catalog */
      catalogType?: string;
      /** @description Description of this catalog */
      description?: string;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the catalog */
      name?: string;
      /** @description Catalog version */
      version?: string;
      /** @description List of root categories contained in this catalog */
      category?: components["schemas"]["CategoryRef"][];
      /** @description List of parties involved in this catalog */
      relatedParty?: components["schemas"]["RelatedParty"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /**
     * @description A collection of Product Offerings, intended for a specific DistributionChannel, enhanced with additional information such as SLA parameters, invoicing and shipping details
     * Skipped properties: id,href
     */
    Catalog_Create: {
      /** @description Indicates if the catalog is a product, service or resource catalog */
      catalogType?: string;
      /** @description Description of this catalog */
      description?: string;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the catalog */
      name: string;
      /** @description Catalog version */
      version?: string;
      /** @description List of root categories contained in this catalog */
      category?: components["schemas"]["CategoryRef"][];
      /** @description List of parties involved in this catalog */
      relatedParty?: components["schemas"]["RelatedParty"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /**
     * @description A collection of Product Offerings, intended for a specific DistributionChannel, enhanced with additional information such as SLA parameters, invoicing and shipping details
     * Skipped properties: id,href,lastUpdate,@type,@baseType
     */
    Catalog_Update: {
      /** @description Indicates if the catalog is a product, service or resource catalog */
      catalogType?: string;
      /** @description Description of this catalog */
      description?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the catalog */
      name?: string;
      /** @description Catalog version */
      version?: string;
      /** @description List of root categories contained in this catalog */
      category?: components["schemas"]["CategoryRef"][];
      /** @description List of parties involved in this catalog */
      relatedParty?: components["schemas"]["RelatedParty"][];
      validFor?: components["schemas"]["TimePeriod"];
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
    };
    /** @description The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates. */
    Category: {
      /** @description Unique identifier of the category */
      id?: string;
      /** @description Reference of the category */
      href?: string;
      /** @description Description of the category */
      description?: string;
      /** @description If true, this Boolean indicates that the category is a root of categories */
      isRoot?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the category */
      name?: string;
      /** @description Unique identifier of the parent category */
      parentId?: string;
      /** @description Category version */
      version?: string;
      /** @description A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information. */
      productOffering?: components["schemas"]["ProductOfferingRef"][];
      /** @description The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other (sub-)categories and/or product offerings. */
      subCategory?: components["schemas"]["CategoryRef"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /**
     * @description The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates.
     * Skipped properties: id,href
     */
    Category_Create: {
      /** @description Description of the category */
      description?: string;
      /** @description If true, this Boolean indicates that the category is a root of categories */
      isRoot?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the category */
      name: string;
      /** @description Unique identifier of the parent category */
      parentId?: string;
      /** @description Category version */
      version?: string;
      /** @description A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information. */
      productOffering?: components["schemas"]["ProductOfferingRef"][];
      /** @description The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other (sub-)categories and/or product offerings. */
      subCategory?: components["schemas"]["CategoryRef"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /**
     * @description The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates.
     * Skipped properties: id,href,lastUpdate,@type,@baseType
     */
    Category_Update: {
      /** @description Description of the category */
      description?: string;
      /** @description If true, this Boolean indicates that the category is a root of categories */
      isRoot?: boolean;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the category */
      name?: string;
      /** @description Unique identifier of the parent category */
      parentId?: string;
      /** @description Category version */
      version?: string;
      /** @description A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information. */
      productOffering?: components["schemas"]["ProductOfferingRef"][];
      /** @description The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other (sub-)categories and/or product offerings. */
      subCategory?: components["schemas"]["CategoryRef"][];
      validFor?: components["schemas"]["TimePeriod"];
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
    };
    /** @description The category for grouping recommendations */
    CategoryRef: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description Category version */
      version?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description The channel to which the resource reference to. e.g. channel for selling product offerings, channel for opening a trouble ticket etc.. */
    ChannelRef: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the channel. */
      name?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description This class defines a characteristic specification. */
    CharacteristicSpecificationBase: {
      /** @description Unique ID for the characteristic */
      id?: string;
      /** @description If true, the Boolean indicates that the target Characteristic is configurable */
      configurable?: boolean;
      /** @description A narrative that explains the CharacteristicSpecification. */
      description?: string;
      /** @description An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource. */
      extensible?: boolean;
      /** @description An indicator that specifies if a value is unique for the specification. Possible values are; "unique while value is in effect" and "unique whether value is in effect or not" */
      isUnique?: boolean;
      /** @description The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality. */
      maxCardinality?: number;
      /** @description The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality. */
      minCardinality?: number;
      /** @description A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications. */
      name?: string;
      /** @description A rule or principle represented in regular expression used to derive the value of a characteristic value. */
      regex?: string;
      /** @description A kind of value that the characteristic can take on, such as numeric, text and so forth */
      valueType?: string;
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description This (optional) field provides a link to the schema describing the value type. */
      "@valueSchemaLocation"?: string;
    };
    /** @description specification of a value (number or text or an object) that can be assigned to a Characteristic. */
    CharacteristicValueSpecification: {
      /** @description If true, the Boolean Indicates if the value is the default value for a characteristic */
      isDefault?: boolean;
      /** @description An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are "open", "closed", "closedBottom" and "closedTop". */
      rangeInterval?: string;
      /** @description A regular expression constraint for given value */
      regex?: string;
      /** @description A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot. */
      unitOfMeasure?: string;
      /** @description The low range value that a characteristic can take on */
      valueFrom?: number;
      /** @description The upper range value that a characteristic can take on */
      valueTo?: number;
      /** @description A kind of value that the characteristic value can take on, such as numeric, text and so forth */
      valueType?: string;
      validFor?: components["schemas"]["TimePeriod"];
      value?: components["schemas"]["Any"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec. */
    ConstraintRef: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description constraint version */
      version?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description A time interval in a given unit of time */
    Duration: {
      /** @description Time interval (number of seconds, minutes, hours, etc.) */
      amount?: number;
      /** @description Unit of time (seconds, minutes, hours, etc.) */
      units?: string;
    };
    /** @description Base entity schema for use in TMForum Open-APIs */
    Entity: {
      /** @description unique identifier */
      id?: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description Entity reference schema to be use for all entityRef class. */
    EntityRef: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description Represents a task used to export resources to a file */
    ExportJob: {
      /** @description Identifier of the export job */
      id?: string;
      /**
       * Format: uri
       * @description Reference of the export job
       */
      href?: string;
      /**
       * Format: date-time
       * @description Data at which the job was completed
       */
      completionDate?: string;
      /** @description The format of the exported data */
      contentType?: string;
      /**
       * Format: date-time
       * @description Date at which the job was created
       */
      creationDate?: string;
      /** @description Reason for failure */
      errorLog?: string;
      /** @description URL of the root resource acting as the source for streaming content to the file specified by the export job */
      path?: string;
      /** @description Used to scope the exported data */
      query?: string;
      /**
       * Format: uri
       * @description URL of the file containing the data to be exported
       */
      url?: string;
      status?: components["schemas"]["JobStateType"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /**
     * @description Represents a task used to export resources to a file
     * Skipped properties: id,href
     */
    ExportJob_Create: {
      /**
       * Format: date-time
       * @description Data at which the job was completed
       */
      completionDate?: string;
      /** @description The format of the exported data */
      contentType?: string;
      /**
       * Format: date-time
       * @description Date at which the job was created
       */
      creationDate?: string;
      /** @description Reason for failure */
      errorLog?: string;
      /** @description URL of the root resource acting as the source for streaming content to the file specified by the export job */
      path?: string;
      /** @description Used to scope the exported data */
      query?: string;
      /**
       * Format: uri
       * @description URL of the file containing the data to be exported
       */
      url: string;
      status?: components["schemas"]["JobStateType"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description Base Extensible schema for use in TMForum Open-APIs */
    Extensible: {
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description Represents a task used to import resources from a file */
    ImportJob: {
      /** @description Identifier of the import job */
      id?: string;
      /**
       * Format: uri
       * @description Reference of the import job
       */
      href?: string;
      /**
       * Format: date-time
       * @description Date at which the job was completed
       */
      completionDate?: string;
      /** @description Indicates the format of the imported data */
      contentType?: string;
      /**
       * Format: date-time
       * @description Date at which the job was created
       */
      creationDate?: string;
      /** @description Reason for failure if status is failed */
      errorLog?: string;
      /** @description URL of the root resource where the content of the file specified by the import job must be applied */
      path?: string;
      /**
       * Format: uri
       * @description URL of the file containing the data to be imported
       */
      url?: string;
      status?: components["schemas"]["JobStateType"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /**
     * @description Represents a task used to import resources from a file
     * Skipped properties: id,href
     */
    ImportJob_Create: {
      /**
       * Format: date-time
       * @description Date at which the job was completed
       */
      completionDate?: string;
      /** @description Indicates the format of the imported data */
      contentType?: string;
      /**
       * Format: date-time
       * @description Date at which the job was created
       */
      creationDate?: string;
      /** @description Reason for failure if status is failed */
      errorLog?: string;
      /** @description URL of the root resource where the content of the file specified by the import job must be applied */
      path?: string;
      /**
       * Format: uri
       * @description URL of the file containing the data to be imported
       */
      url: string;
      status?: components["schemas"]["JobStateType"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /**
     * @description Valid values for the state of a batch job (e.g. catalog import)
     * @enum {string}
     */
    JobStateType: "Not Started" | "Running" | "Succeeded" | "Failed";
    /** @description provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth. */
    MarketSegmentRef: {
      /** @description Unique identifier of the market segment */
      id: string;
      /** @description Reference of the market segment */
      href?: string;
      /** @description Name of the market segment */
      name?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description (Class) type of the referred market segment */
      "@referredType"?: string;
    };
    /** @description A base / value business entity used to represent money */
    Money: {
      /** @description Currency (ISO4217 norm uses 3 letters to define the currency) */
      unit?: string;
      /**
       * Format: float
       * @description A positive floating point number
       */
      value?: number;
    };
    /** @description Is an amount, usually of money, that modifies the price charged for an order item. */
    POPAlteration: {
      /** @description unique identifier */
      id?: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description A narrative that explains in detail the semantics of this order item price alteration */
      description?: string;
      /** @description Name given to this price alteration */
      name?: string;
      /** @description A category that describes the price such as recurring, one time and usage. */
      priceType: string;
      /** @description Priority level for applying this alteration among all the defined alterations on the order item price */
      priority?: number;
      /** @description Could be month, week... */
      recurringChargePeriod?: string;
      applicationDuration?: components["schemas"]["Duration"];
      price: components["schemas"]["ProductPriceValue"];
      unitOfMeasure?: components["schemas"]["Quantity"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description This is representing a product offering price (charge) based on both the basic cost to develop and produce products and the enterprises policy on revenue targets. This price may be further revised through discounting (a Product Offering Price that reflects an alteration). */
    POPCharge: {
      /** @description unique identifier */
      id?: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Description of the productOfferingPrice */
      description?: string;
      /**
       * Format: date-time
       * @description the last update time of this ProductOfferingPrice
       */
      lastUpdate?: string;
      /** @description the lifecycle status of this ProductOfferingPrice */
      lifecycleStatus?: string;
      /** @description Name of the productOfferingPrice */
      name?: string;
      /** @description A category that describes the price charge, such as recurring, penalty, One time fee and so forth. */
      priceType?: string;
      /**
       * @description The period type to repeat the application of the price
       * Could be month, week...
       */
      recurringChargePeriod?: string;
      /** @description the period of the recurring charge:  1, 2, ... .It sets to zero if it is not applicable */
      recurringChargePeriodLength?: number;
      /** @description ProductOffering version */
      version?: string;
      /** @description The Constraint resource represents a policy/rule applied to ProductOfferingPrice. */
      constraint?: components["schemas"]["ConstraintRef"][];
      price?: components["schemas"]["ProductPriceValue"];
      priceAlteration?: components["schemas"]["POPAlteration"][];
      unitOfMeasure?: components["schemas"]["Quantity"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description Place reference. PlaceRef defines the placeRefs where the products are sold or delivered. */
    PlaceRef: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description The PricingLogicAlgorithm entity represents an instantiation of an interface specification to external rating function (without a modeled bahavior in SID). Some of the parameters of the interface definiition may be already set (such as price per unit) and some may be gathered during the rating process from the event (such as call duration) or from ProductCharacteristicValues (such as assigned bandwidth) */
    PricingLogicAlgorithm: {
      /** @description unique identifier */
      id?: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Description of the PricingLogicAlgorithm */
      description?: string;
      /** @description Name given to the PricingLogicAlgorithm */
      name?: string;
      /** @description id of corresponding PricingLogicAlgorithm specification */
      plaSpecId?: string;
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description Represents entities that are orderable from the provider of the catalog, this resource includes pricing information. */
    ProductOffering: {
      /** @description Unique identifier of the productOffering */
      id?: string;
      /** @description Reference of the ProductOffering */
      href?: string;
      /** @description Description of the productOffering */
      description?: string;
      /** @description isBundle determines whether a productOffering represents a single productOffering (false), or a bundle of productOfferings (true). */
      isBundle?: boolean;
      /** @description A flag indicating if this product offer can be sold stand-alone for sale or not. If this flag is false it indicates that the offer can only be sold within a bundle. */
      isSellable?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the productOffering */
      name?: string;
      /** @description A string providing a complementary information on the value of the lifecycle status attribute. */
      statusReason?: string;
      /** @description ProductOffering version */
      version?: string;
      /** @description An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications. */
      agreement?: components["schemas"]["AgreementRef"][];
      /** @description Complements the description of an element (for instance a product) through video, pictures... */
      attachment?: components["schemas"]["AttachmentRefOrValue"][];
      /** @description A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering. */
      bundledProductOffering?: components["schemas"]["BundledProductOffering"][];
      /** @description The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates. */
      category?: components["schemas"]["CategoryRef"][];
      /** @description The channel defines the channel for selling product offerings. */
      channel?: components["schemas"]["ChannelRef"][];
      /** @description provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth. */
      marketSegment?: components["schemas"]["MarketSegmentRef"][];
      /** @description Place defines the places where the products are sold or delivered. */
      place?: components["schemas"]["PlaceRef"][];
      /** @description A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics. */
      prodSpecCharValueUse?: components["schemas"]["ProductSpecificationCharacteristicValueUse"][];
      /** @description An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased. The price is valid for a defined period of time and may not represent the actual price paid by a customer. */
      //productOfferingPrice?: components["schemas"]["ProductOfferingPriceRefOrValue"][];
      productOfferingPrice?: components["schemas"]["ProductOfferingPrice"][];
      /** @description A relationship between this product offering and other product offerings. */
      productOfferingRelationship?: components["schemas"]["ProductOfferingRelationship"][];
      /** @description A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods. */
      productOfferingTerm?: components["schemas"]["ProductOfferingTerm"][];
      productSpecification?: components["schemas"]["ProductSpecificationRef"];
      resourceCandidate?: components["schemas"]["ResourceCandidateRef"];
      serviceCandidate?: components["schemas"]["ServiceCandidateRef"];
      serviceLevelAgreement?: components["schemas"]["SLARef"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /**
     * @description Represents entities that are orderable from the provider of the catalog, this resource includes pricing information.
     * Skipped properties: id,href
     */
    ProductOffering_Create: {
      /** @description Description of the productOffering */
      description?: string;
      /** @description isBundle determines whether a productOffering represents a single productOffering (false), or a bundle of productOfferings (true). */
      isBundle?: boolean;
      /** @description A flag indicating if this product offer can be sold stand-alone for sale or not. If this flag is false it indicates that the offer can only be sold within a bundle. */
      isSellable?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the productOffering */
      name: string;
      /** @description A string providing a complementary information on the value of the lifecycle status attribute. */
      statusReason?: string;
      /** @description ProductOffering version */
      version?: string;
      /** @description An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications. */
      agreement?: components["schemas"]["AgreementRef"][];
      /** @description Complements the description of an element (for instance a product) through video, pictures... */
      attachment?: components["schemas"]["AttachmentRefOrValue"][];
      /** @description A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering. */
      bundledProductOffering?: components["schemas"]["BundledProductOffering"][];
      /** @description The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates. */
      category?: components["schemas"]["CategoryRef"][];
      /** @description The channel defines the channel for selling product offerings. */
      channel?: components["schemas"]["ChannelRef"][];
      /** @description provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth. */
      marketSegment?: components["schemas"]["MarketSegmentRef"][];
      /** @description Place defines the places where the products are sold or delivered. */
      place?: components["schemas"]["PlaceRef"][];
      /** @description A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics. */
      prodSpecCharValueUse?: components["schemas"]["ProductSpecificationCharacteristicValueUse"][];
      /** @description An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased. The price is valid for a defined period of time and may not represent the actual price paid by a customer. */
      productOfferingPrice?: components["schemas"]["ProductOfferingPriceRefOrValue"][];
      /** @description A relationship between this product offering and other product offerings. */
      productOfferingRelationship?: components["schemas"]["ProductOfferingRelationship"][];
      /** @description A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods. */
      productOfferingTerm?: components["schemas"]["ProductOfferingTerm"][];
      productSpecification?: components["schemas"]["ProductSpecificationRef"];
      resourceCandidate?: components["schemas"]["ResourceCandidateRef"];
      serviceCandidate?: components["schemas"]["ServiceCandidateRef"];
      serviceLevelAgreement?: components["schemas"]["SLARef"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /**
     * @description Represents entities that are orderable from the provider of the catalog, this resource includes pricing information.
     * Skipped properties: id,href,lastUpdate,@type,@baseType
     */
    ProductOffering_Update: {
      /** @description Description of the productOffering */
      description?: string;
      /** @description isBundle determines whether a productOffering represents a single productOffering (false), or a bundle of productOfferings (true). */
      isBundle?: boolean;
      /** @description A flag indicating if this product offer can be sold stand-alone for sale or not. If this flag is false it indicates that the offer can only be sold within a bundle. */
      isSellable?: boolean;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the productOffering */
      name?: string;
      /** @description A string providing a complementary information on the value of the lifecycle status attribute. */
      statusReason?: string;
      /** @description ProductOffering version */
      version?: string;
      /** @description An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications. */
      agreement?: components["schemas"]["AgreementRef"][];
      /** @description Complements the description of an element (for instance a product) through video, pictures... */
      attachment?: components["schemas"]["AttachmentRefOrValue"][];
      /** @description A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering. */
      bundledProductOffering?: components["schemas"]["BundledProductOffering"][];
      /** @description The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates. */
      category?: components["schemas"]["CategoryRef"][];
      /** @description The channel defines the channel for selling product offerings. */
      channel?: components["schemas"]["ChannelRef"][];
      /** @description provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth. */
      marketSegment?: components["schemas"]["MarketSegmentRef"][];
      /** @description Place defines the places where the products are sold or delivered. */
      place?: components["schemas"]["PlaceRef"][];
      /** @description A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics. */
      prodSpecCharValueUse?: components["schemas"]["ProductSpecificationCharacteristicValueUse"][];
      /** @description An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased. The price is valid for a defined period of time and may not represent the actual price paid by a customer. */
      productOfferingPrice?: components["schemas"]["ProductOfferingPriceRefOrValue"][];
      /** @description A relationship between this product offering and other product offerings. */
      productOfferingRelationship?: components["schemas"]["ProductOfferingRelationship"][];
      /** @description A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods. */
      productOfferingTerm?: components["schemas"]["ProductOfferingTerm"][];
      productSpecification?: components["schemas"]["ProductSpecificationRef"];
      resourceCandidate?: components["schemas"]["ResourceCandidateRef"];
      serviceCandidate?: components["schemas"]["ServiceCandidateRef"];
      serviceLevelAgreement?: components["schemas"]["SLARef"];
      validFor?: components["schemas"]["TimePeriod"];
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
    };
    /** @description Is based on both the basic cost to develop and produce products and the enterprises policy on revenue targets. This price may be further revised through discounting (a Product Offering Price that reflects an alteration). The price, applied for a productOffering may also be influenced by the productOfferingTerm, the customer selected, eg: a productOffering can be offered with multiple terms, like commitment periods for the contract. The price may be influenced by this productOfferingTerm. A productOffering may be cheaper with a 24 month commitment than with a 12 month commitment. */
    ProductOfferingPrice: {
      /** @description unique id of this resource */
      id?: string;
      /** @description Reference of the ProductOfferingPrice */
      href?: string;
      /** @description Description of the productOfferingPrice */
      description?: string;
      /** @description A flag indicating if this ProductOfferingPrice is composite (bundle) or not */
      isBundle?: boolean;
      /**
       * Format: date-time
       * @description the last update time of this ProductOfferingPrice
       */
      lastUpdate?: string;
      /** @description the lifecycle status of this ProductOfferingPrice */
      lifecycleStatus?: string;
      /** @description Name of the productOfferingPrice */
      name?: string;
      /**
       * Format: float
       * @description Percentage to apply if this Product Offering Price is an Alteration (such as a Discount)
       */
      percentage?: number;
      /** @description A category that describes the price, such as recurring, discount, allowance, penalty, and so forth. */
      priceType?: string;
      /** @description the period of the recurring charge:  1, 2, ... .It sets to zero if it is not applicable */
      recurringChargePeriodLength?: number;
      /**
       * @description The period to repeat the application of the price
       * Could be month, week...
       */
      recurringChargePeriodType?: string;
      /** @description ProductOfferingPrice version */
      version?: string;
      /** @description this object represents a bundle relationship from a bundle product offering price (parent) to a simple product offering price (child). A simple product offering price may participate in more than one bundle relationship. */
      bundledPopRelationship?: components["schemas"]["BundledProductOfferingPriceRelationship"][];
      /** @description The Constraint resource represents a policy/rule applied to ProductOfferingPrice. */
      constraint?: components["schemas"]["ConstraintRef"][];
      /** @description Place defines the places where the products are sold or delivered. */
      place?: components["schemas"]["PlaceRef"][];
      /** @description Product Offering Prices related to this Product Offering Price, for example a price alteration such as allowance or discount */
      popRelationship?: components["schemas"]["ProductOfferingPriceRelationship"][];
      price?: components["schemas"]["Money"];
      /** @description The PricingLogicAlgorithm entity represents an instantiation of an interface specification to external rating function (without a modeled behavior in SID). Some of the parameters of the interface definition may be already set (such as price per unit) and some may be gathered during the rating process from the event (such as call duration) or from ProductCharacteristicValues (such as assigned bandwidth). */
      pricingLogicAlgorithm?: components["schemas"]["PricingLogicAlgorithm"][];
      /** @description A use of the ProductSpecificationCharacteristicValue by a ProductOfferingPrice to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering and ProcuctOfferingPrice level. The list of values in ProductSpecificationCharacteristicValueUse is a strict subset of the list of values as defined in the corresponding product specification characteristics. */
      prodSpecCharValueUse?: components["schemas"]["ProductSpecificationCharacteristicValueUse"][];
      /** @description A list of conditions under which a ProductOfferingPrice is made available to Customers. For instance, a Product Offering Price can be offered with multiple commitment periods. */
      productOfferingTerm?: components["schemas"]["ProductOfferingTerm"][];
      /** @description An amount of money levied on the price of a Product by a legislative body. */
      tax?: components["schemas"]["TaxItem"][];
      unitOfMeasure?: components["schemas"]["Quantity"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description the immediate base class type of this product offering price */
      "@baseType"?: string;
      /** @description hyperlink reference to the schema describing this resource */
      "@schemaLocation"?: string;
      /** @description The class type of this Product offering price */
      "@type"?: string;
    };
    /**
     * @description Is based on both the basic cost to develop and produce products and the enterprises policy on revenue targets. This price may be further revised through discounting (a Product Offering Price that reflects an alteration). The price, applied for a productOffering may also be influenced by the productOfferingTerm, the customer selected, eg: a productOffering can be offered with multiple terms, like commitment periods for the contract. The price may be influenced by this productOfferingTerm. A productOffering may be cheaper with a 24 month commitment than with a 12 month commitment.
     * Skipped properties: id,href
     */
    ProductOfferingPrice_Create: {
      /** @description Description of the productOfferingPrice */
      description?: string;
      /** @description A flag indicating if this ProductOfferingPrice is composite (bundle) or not */
      isBundle?: boolean;
      /**
       * Format: date-time
       * @description the last update time of this ProductOfferingPrice
       */
      lastUpdate?: string;
      /** @description the lifecycle status of this ProductOfferingPrice */
      lifecycleStatus?: string;
      /** @description Name of the productOfferingPrice */
      name: string;
      /**
       * Format: float
       * @description Percentage to apply if this Product Offering Price is an Alteration (such as a Discount)
       */
      percentage?: number;
      /** @description A category that describes the price, such as recurring, discount, allowance, penalty, and so forth. */
      priceType?: string;
      /** @description the period of the recurring charge:  1, 2, ... .It sets to zero if it is not applicable */
      recurringChargePeriodLength?: number;
      /**
       * @description The period to repeat the application of the price
       * Could be month, week...
       */
      recurringChargePeriodType?: string;
      /** @description ProductOfferingPrice version */
      version?: string;
      /** @description this object represents a bundle relationship from a bundle product offering price (parent) to a simple product offering price (child). A simple product offering price may participate in more than one bundle relationship. */
      bundledPopRelationship?: components["schemas"]["BundledProductOfferingPriceRelationship"][];
      /** @description The Constraint resource represents a policy/rule applied to ProductOfferingPrice. */
      constraint?: components["schemas"]["ConstraintRef"][];
      /** @description Place defines the places where the products are sold or delivered. */
      place?: components["schemas"]["PlaceRef"][];
      /** @description Product Offering Prices related to this Product Offering Price, for example a price alteration such as allowance or discount */
      popRelationship?: components["schemas"]["ProductOfferingPriceRelationship"][];
      price?: components["schemas"]["Money"];
      /** @description The PricingLogicAlgorithm entity represents an instantiation of an interface specification to external rating function (without a modeled behavior in SID). Some of the parameters of the interface definition may be already set (such as price per unit) and some may be gathered during the rating process from the event (such as call duration) or from ProductCharacteristicValues (such as assigned bandwidth). */
      pricingLogicAlgorithm?: components["schemas"]["PricingLogicAlgorithm"][];
      /** @description A use of the ProductSpecificationCharacteristicValue by a ProductOfferingPrice to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering and ProcuctOfferingPrice level. The list of values in ProductSpecificationCharacteristicValueUse is a strict subset of the list of values as defined in the corresponding product specification characteristics. */
      prodSpecCharValueUse?: components["schemas"]["ProductSpecificationCharacteristicValueUse"][];
      /** @description A list of conditions under which a ProductOfferingPrice is made available to Customers. For instance, a Product Offering Price can be offered with multiple commitment periods. */
      productOfferingTerm?: components["schemas"]["ProductOfferingTerm"][];
      /** @description An amount of money levied on the price of a Product by a legislative body. */
      tax?: components["schemas"]["TaxItem"][];
      unitOfMeasure?: components["schemas"]["Quantity"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description the immediate base class type of this product offering price */
      "@baseType"?: string;
      /** @description hyperlink reference to the schema describing this resource */
      "@schemaLocation"?: string;
      /** @description The class type of this Product offering price */
      "@type"?: string;
    };
    /**
     * @description Is based on both the basic cost to develop and produce products and the enterprises policy on revenue targets. This price may be further revised through discounting (a Product Offering Price that reflects an alteration). The price, applied for a productOffering may also be influenced by the productOfferingTerm, the customer selected, eg: a productOffering can be offered with multiple terms, like commitment periods for the contract. The price may be influenced by this productOfferingTerm. A productOffering may be cheaper with a 24 month commitment than with a 12 month commitment.
     * Skipped properties: id,href,lastUpdate,@type,@baseType
     */
    ProductOfferingPrice_Update: {
      /** @description Description of the productOfferingPrice */
      description?: string;
      /** @description A flag indicating if this ProductOfferingPrice is composite (bundle) or not */
      isBundle?: boolean;
      /** @description the lifecycle status of this ProductOfferingPrice */
      lifecycleStatus?: string;
      /** @description Name of the productOfferingPrice */
      name?: string;
      /**
       * Format: float
       * @description Percentage to apply if this Product Offering Price is an Alteration (such as a Discount)
       */
      percentage?: number;
      /** @description A category that describes the price, such as recurring, discount, allowance, penalty, and so forth. */
      priceType?: string;
      /** @description the period of the recurring charge:  1, 2, ... .It sets to zero if it is not applicable */
      recurringChargePeriodLength?: number;
      /**
       * @description The period to repeat the application of the price
       * Could be month, week...
       */
      recurringChargePeriodType?: string;
      /** @description ProductOfferingPrice version */
      version?: string;
      /** @description this object represents a bundle relationship from a bundle product offering price (parent) to a simple product offering price (child). A simple product offering price may participate in more than one bundle relationship. */
      bundledPopRelationship?: components["schemas"]["BundledProductOfferingPriceRelationship"][];
      /** @description The Constraint resource represents a policy/rule applied to ProductOfferingPrice. */
      constraint?: components["schemas"]["ConstraintRef"][];
      /** @description Place defines the places where the products are sold or delivered. */
      place?: components["schemas"]["PlaceRef"][];
      /** @description Product Offering Prices related to this Product Offering Price, for example a price alteration such as allowance or discount */
      popRelationship?: components["schemas"]["ProductOfferingPriceRelationship"][];
      price?: components["schemas"]["Money"];
      /** @description The PricingLogicAlgorithm entity represents an instantiation of an interface specification to external rating function (without a modeled behavior in SID). Some of the parameters of the interface definition may be already set (such as price per unit) and some may be gathered during the rating process from the event (such as call duration) or from ProductCharacteristicValues (such as assigned bandwidth). */
      pricingLogicAlgorithm?: components["schemas"]["PricingLogicAlgorithm"][];
      /** @description A use of the ProductSpecificationCharacteristicValue by a ProductOfferingPrice to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering and ProcuctOfferingPrice level. The list of values in ProductSpecificationCharacteristicValueUse is a strict subset of the list of values as defined in the corresponding product specification characteristics. */
      prodSpecCharValueUse?: components["schemas"]["ProductSpecificationCharacteristicValueUse"][];
      /** @description A list of conditions under which a ProductOfferingPrice is made available to Customers. For instance, a Product Offering Price can be offered with multiple commitment periods. */
      productOfferingTerm?: components["schemas"]["ProductOfferingTerm"][];
      /** @description An amount of money levied on the price of a Product by a legislative body. */
      tax?: components["schemas"]["TaxItem"][];
      unitOfMeasure?: components["schemas"]["Quantity"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description hyperlink reference to the schema describing this resource */
      "@schemaLocation"?: string;
    };
    /** @description ProductPriceOffering reference. An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased */
    ProductOfferingPriceRef: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description A new product offering price being created by value or a reference to an existing product offering price that alreasy created. The polymorphic attributes @type, @schemaLocation & @referredType are related to the product offering price and not to this ReforValue structure */
    ProductOfferingPriceRefOrValue: {
      /** @description unique identifier */
      id?: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Description of the productOfferingPrice */
      description?: string;
      /**
       * Format: date-time
       * @description the last update time of this ProductOfferingPrice
       */
      lastUpdate?: string;
      /** @description the lifecycle status of this ProductOfferingPrice */
      lifecycleStatus?: string;
      /** @description Name of the productOfferingPrice */
      name?: string;
      /** @description A category that describes the price charge, such as recurring, penalty, One time fee and so forth. */
      priceType?: string;
      /**
       * @description The period type to repeat the application of the price
       * Could be month, week...
       */
      recurringChargePeriod?: string;
      /** @description the period of the recurring charge:  1, 2, ... .It sets to zero if it is not applicable */
      recurringChargePeriodLength?: number;
      /** @description ProductOffering version */
      version?: string;
      /** @description The Constraint resource represents a policy/rule applied to ProductOfferingPrice. */
      constraint?: components["schemas"]["ConstraintRef"][];
      price?: components["schemas"]["ProductPriceValue"];
      priceAlteration?: components["schemas"]["POPAlteration"][];
      unitOfMeasure?: components["schemas"]["Quantity"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description Describes a non-composite relationship between product offering prices. For example one price might be an discount alteration for another price. */
    ProductOfferingPriceRelationship: {
      /** @description unique identifier */
      id?: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description type of the relationship, for example override, discount, etc. */
      relationshipType?: string;
      /** @description The association role for the source product offering price */
      role?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description ProductOffering reference. A product offering represents entities that are orderable from the provider of the catalog, this resource includes pricing information. */
    ProductOfferingRef: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description A relationship between two product Offerings. */
    ProductOfferingRelationship: {
      /** @description unique identifier */
      id?: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description Type of relationship between product offerings such as requires, exchangableTo, optionalFor */
      relationshipType?: string;
      /** @description The association role for the source product offering */
      role?: string;
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods. */
    ProductOfferingTerm: {
      /** @description Description of the productOfferingTerm */
      description?: string;
      /** @description Name of the productOfferingTerm */
      name?: string;
      duration?: components["schemas"]["Duration"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description Provides all amounts (tax included, duty free, tax rate), used currency and percentage to apply for Price Alteration. */
    ProductPriceValue: {
      /**
       * Format: float
       * @description Percentage to apply for ProdOfferPriceAlteration
       */
      percentage?: number;
      /** @description Tax category */
      taxCategory?: string;
      /**
       * Format: float
       * @description Tax rate
       */
      taxRate?: number;
      dutyFreeAmount?: components["schemas"]["Money"];
      taxIncludedAmount?: components["schemas"]["Money"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description Is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role. */
    ProductSpecification: {
      /** @description Unique identifier of the product specification */
      id?: string;
      /** @description Reference of the product specification */
      href?: string;
      /** @description The manufacturer or trademark of the specification */
      brand?: string;
      /** @description A narrative that explains in detail what the product specification is */
      description?: string;
      /** @description isBundle determines whether a productSpecification represents a single productSpecification (false), or a bundle of productSpecification (true). */
      isBundle?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the product specification */
      name?: string;
      /** @description An identification number assigned to uniquely identity the specification */
      productNumber?: string;
      /** @description Product specification version */
      version?: string;
      /** @description Complements the description of an element (for instance a product) through video, pictures... */
      attachment?: components["schemas"]["AttachmentRefOrValue"][];
      /** @description A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification. */
      bundledProductSpecification?: components["schemas"]["BundledProductSpecification"][];
      /** @description A characteristic quality or distinctive feature of a ProductSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process. */
      productSpecCharacteristic?: components["schemas"]["ProductSpecificationCharacteristic"][];
      /** @description A migration, substitution, dependency or exclusivity relationship between/among product specifications. */
      productSpecificationRelationship?: components["schemas"]["ProductSpecificationRelationship"][];
      /** @description A related party defines party or party role linked to a specific entity. */
      relatedParty?: components["schemas"]["RelatedParty"][];
      /** @description The ResourceSpecification is required to realize a ProductSpecification. */
      resourceSpecification?: components["schemas"]["ResourceSpecificationRef"][];
      /** @description ServiceSpecification(s) required to realize a ProductSpecification. */
      serviceSpecification?: components["schemas"]["ServiceSpecificationRef"][];
      targetProductSchema?: components["schemas"]["TargetProductSchema"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /**
     * @description Is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role.
     * Skipped properties: id,href
     */
    ProductSpecification_Create: {
      /** @description The manufacturer or trademark of the specification */
      brand?: string;
      /** @description A narrative that explains in detail what the product specification is */
      description?: string;
      /** @description isBundle determines whether a productSpecification represents a single productSpecification (false), or a bundle of productSpecification (true). */
      isBundle?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the product specification */
      name: string;
      /** @description An identification number assigned to uniquely identity the specification */
      productNumber?: string;
      /** @description Product specification version */
      version?: string;
      /** @description Complements the description of an element (for instance a product) through video, pictures... */
      attachment?: components["schemas"]["AttachmentRefOrValue"][];
      /** @description A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification. */
      bundledProductSpecification?: components["schemas"]["BundledProductSpecification"][];
      /** @description A characteristic quality or distinctive feature of a ProductSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process. */
      productSpecCharacteristic?: components["schemas"]["ProductSpecificationCharacteristic"][];
      /** @description A migration, substitution, dependency or exclusivity relationship between/among product specifications. */
      productSpecificationRelationship?: components["schemas"]["ProductSpecificationRelationship"][];
      /** @description A related party defines party or party role linked to a specific entity. */
      relatedParty?: components["schemas"]["RelatedParty"][];
      /** @description The ResourceSpecification is required to realize a ProductSpecification. */
      resourceSpecification?: components["schemas"]["ResourceSpecificationRef"][];
      /** @description ServiceSpecification(s) required to realize a ProductSpecification. */
      serviceSpecification?: components["schemas"]["ServiceSpecificationRef"][];
      targetProductSchema?: components["schemas"]["TargetProductSchema"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /**
     * @description Is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role.
     * Skipped properties: id,href,lastUpdate,@type,@baseType
     */
    ProductSpecification_Update: {
      /** @description The manufacturer or trademark of the specification */
      brand?: string;
      /** @description A narrative that explains in detail what the product specification is */
      description?: string;
      /** @description isBundle determines whether a productSpecification represents a single productSpecification (false), or a bundle of productSpecification (true). */
      isBundle?: boolean;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the product specification */
      name?: string;
      /** @description An identification number assigned to uniquely identity the specification */
      productNumber?: string;
      /** @description Product specification version */
      version?: string;
      /** @description Complements the description of an element (for instance a product) through video, pictures... */
      attachment?: components["schemas"]["AttachmentRefOrValue"][];
      /** @description A type of ProductSpecification that belongs to a grouping of ProductSpecifications made available to the market. It inherits of all attributes of ProductSpecification. */
      bundledProductSpecification?: components["schemas"]["BundledProductSpecification"][];
      /** @description A characteristic quality or distinctive feature of a ProductSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process. */
      productSpecCharacteristic?: components["schemas"]["ProductSpecificationCharacteristic"][];
      /** @description A migration, substitution, dependency or exclusivity relationship between/among product specifications. */
      productSpecificationRelationship?: components["schemas"]["ProductSpecificationRelationship"][];
      /** @description A related party defines party or party role linked to a specific entity. */
      relatedParty?: components["schemas"]["RelatedParty"][];
      /** @description The ResourceSpecification is required to realize a ProductSpecification. */
      resourceSpecification?: components["schemas"]["ResourceSpecificationRef"][];
      /** @description ServiceSpecification(s) required to realize a ProductSpecification. */
      serviceSpecification?: components["schemas"]["ServiceSpecificationRef"][];
      targetProductSchema?: components["schemas"]["TargetProductSchema"];
      validFor?: components["schemas"]["TimePeriod"];
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
    };
    /** @description A characteristic quality or distinctive feature of a ProductSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process. */
    ProductSpecificationCharacteristic: {
      /** @description Unique ID for the characteristic */
      id?: string;
      /** @description If true, the Boolean indicates that the target Characteristic is configurable */
      configurable?: boolean;
      /** @description A narrative that explains the CharacteristicSpecification. */
      description?: string;
      /** @description An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource. */
      extensible?: boolean;
      /** @description An indicator that specifies if a value is unique for the specification. Possible values are; "unique while value is in effect" and "unique whether value is in effect or not" */
      isUnique?: boolean;
      /** @description The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality. */
      maxCardinality?: number;
      /** @description The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality. */
      minCardinality?: number;
      /** @description A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications. */
      name?: string;
      /** @description A rule or principle represented in regular expression used to derive the value of a characteristic value. */
      regex?: string;
      /** @description A kind of value that the characteristic can take on, such as numeric, text and so forth */
      valueType?: string;
      /** @description An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics. */
      productSpecCharRelationship?: components["schemas"]["ProductSpecificationCharacteristicRelationship"][];
      /** @description A ProductSpecificationCharacteristicValue object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a ProductSpecificationCharacteristic object. The values of the attributes in the ProductSpecificationCharacteristicValue object describe the values of the attributes that a corresponding ProductSpecificationCharacteristic object can take on. */
      productSpecCharacteristicValue?: components["schemas"]["CharacteristicValueSpecification"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description This (optional) field provides a link to the schema describing the value type. */
      "@valueSchemaLocation"?: string;
    };
    /** @description An aggregation, migration, substitution, dependency or exclusivity relationship between/among productSpecificationCharacteristics. */
    ProductSpecificationCharacteristicRelationship: {
      /** @description the identifier of the associated product specification */
      id?: string;
      /** @description Hyperlink reference to the target product specification */
      href?: string;
      /**
       * @description The order in which a CharacteristicSpecification appears within another CharacteristicSpecification that defines a grouping of CharacteristicSpecifications.
       *
       * For example, a grouping may represent the name of an individual. The given name is first, the middle name is second, and the last name is third.
       */
      charSpecSeq?: number;
      /** @description Name of the target product specification characteristic */
      name?: string;
      /** @description Type of relationship such as aggregation, migration, substitution, dependency, exclusivity */
      relationshipType?: string;
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics. */
    ProductSpecificationCharacteristicValueUse: {
      /** @description Unique ID for the characteristic */
      id?: string;
      /** @description A narrative that explains in detail what the productSpecificationCharacteristic is */
      description?: string;
      /** @description The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality. */
      maxCardinality?: number;
      /** @description The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality. */
      minCardinality?: number;
      /** @description Name of the associated productSpecificationCharacteristic */
      name?: string;
      /** @description A kind of value that the characteristic can take on, such as numeric, text and so forth */
      valueType?: string;
      /** @description A number or text that can be assigned to a ProductSpecificationCharacteristic. */
      productSpecCharacteristicValue?: components["schemas"]["CharacteristicValueSpecification"][];
      productSpecification?: components["schemas"]["ProductSpecificationRef"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description Product specification reference: A ProductSpecification is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role. */
    ProductSpecificationRef: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description Version of the product specification */
      version?: string;
      targetProductSchema?: components["schemas"]["TargetProductSchema"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description A migration, substitution, dependency or exclusivity relationship between/among product specifications. */
    ProductSpecificationRelationship: {
      /** @description unique identifier */
      id?: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description Type of relationship such as migration, substitution, dependency, exclusivity */
      relationshipType?: string;
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description An amount in a given unit */
    Quantity: {
      /**
       * Format: float
       * @description Numeric value in a given unit
       * @default 1
       */
      amount?: number;
      /** @description Unit */
      units?: string;
    };
    /** @description Related Party reference. A related party defines party or party role linked to a specific entity. */
    RelatedParty: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description Role played by the related party */
      role?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType": string;
    };
    /** @description ResourceCandidate is an entity that makes a resource specification available to a catalog. A ResourceCandidate and its associated resource specification may be published - made visible - in any number of resource catalogs, or in none. */
    ResourceCandidateRef: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description the version of resource candidate */
      version?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /**
     * @description Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.
     * A ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification.
     */
    ResourceSpecificationRef: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description Resource Specification version */
      version?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description ServiceLevelAgreement reference: A service level agreement (SLA) is a type of agreement that represents a formal negotiated agreement between two parties designed to create a common understanding about products, services, priorities, responsibilities, and so forth. The SLA is a set of appropriate procedures and targets formally or informally agreed between parties in order to achieve and maintain specified Quality of Service. */
    SLARef: {
      /** @description Unique identifier of service level agreement */
      id: string;
      /** @description Reference of the service level agreement */
      href?: string;
      /** @description Name of the service level agreement */
      name?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description ServiceCandidate reference. ServiceCandidate is an entity that makes a ServiceSpecification available to a catalog. */
    ServiceCandidateRef: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description Version of the service candidate */
      version?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification. */
    ServiceSpecificationRef: {
      /** @description unique identifier */
      id: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description Service specification version */
      version?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description The reference object to the schema and type of target product which is described by product specification */
    TargetProductSchema: {
      /**
       * Format: uri
       * @description This field provides a link to the schema describing the target product
       */
      "@schemaLocation": string;
      /** @description Class type of the target product */
      "@type": string;
    };
    /** @description A tax item is created for each tax rate and tax type used in the bill. */
    TaxItem: {
      /** @description unique identifier */
      id?: string;
      /**
       * Format: uri
       * @description Hyperlink reference
       */
      href?: string;
      /** @description Tax category */
      taxCategory?: string;
      /**
       * Format: float
       * @description Applied rate of the tax
       */
      taxRate?: number;
      taxAmount?: components["schemas"]["Money"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class Extensible name */
      "@type"?: string;
    };
    /** @description A period of time, either as a deadline (endDateTime only) a startDateTime only, or both */
    TimePeriod: {
      /**
       * Format: date-time
       * @description End of the time period, using IETC-RFC-3339 format
       * @example 1985-04-12T23:20:50.52Z
       */
      endDateTime?: string;
      /**
       * Format: date-time
       * @description Start of the time period, using IETC-RFC-3339 format
       * @example 1985-04-12T23:20:50.52Z
       */
      startDateTime?: string;
    };
    /** @description Sets the communication endpoint address the service instance must use to deliver notification information */
    EventSubscription: {
      /** @description Id of the listener */
      id: string;
      /** @description The callback being registered. */
      callback: string;
      /** @description additional data to be passed */
      query?: string;
    };
    /** @description Sets the communication endpoint address the service instance must use to deliver notification information */
    EventSubscriptionInput: {
      /** @description The callback being registered. */
      callback: string;
      /** @description additional data to be passed */
      query?: string;
    };
    /** @description The notification data structure */
    CatalogCreateEvent: {
      event?: components["schemas"]["CatalogCreateEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    CatalogCreateEventPayload: {
      catalog?: components["schemas"]["Catalog"];
    };
    /** @description The notification data structure */
    CatalogAttributeValueChangeEvent: {
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      /** @description The path identifying the object field concerned by this notification. */
      fieldPath?: string;
      event?: components["schemas"]["CatalogAttributeValueChangeEventPayload"];
    };
    /** @description The event data structure */
    CatalogAttributeValueChangeEventPayload: {
      catalog?: components["schemas"]["Catalog"];
    };
    /** @description The notification data structure */
    CatalogStateChangeEvent: {
      event?: components["schemas"]["CatalogStateChangeEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    CatalogStateChangeEventPayload: {
      catalog?: components["schemas"]["Catalog"];
    };
    /** @description The notification data structure */
    CatalogDeleteEvent: {
      event?: components["schemas"]["CatalogDeleteEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    CatalogDeleteEventPayload: {
      catalog?: components["schemas"]["Catalog"];
    };
    /** @description The notification data structure */
    CatalogBatchEvent: {
      event?: components["schemas"]["CatalogBatchEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    CatalogBatchEventPayload: {
      catalog?: components["schemas"]["Catalog"];
    };
    /** @description The notification data structure */
    CategoryCreateEvent: {
      event?: components["schemas"]["CategoryCreateEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    CategoryCreateEventPayload: {
      category?: components["schemas"]["Category"];
    };
    /** @description The notification data structure */
    CategoryAttributeValueChangeEvent: {
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      /** @description The path identifying the object field concerned by this notification. */
      fieldPath?: string;
      event?: components["schemas"]["CategoryAttributeValueChangeEventPayload"];
    };
    /** @description The event data structure */
    CategoryAttributeValueChangeEventPayload: {
      category?: components["schemas"]["Category"];
    };
    /** @description The notification data structure */
    CategoryStateChangeEvent: {
      event?: components["schemas"]["CategoryStateChangeEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    CategoryStateChangeEventPayload: {
      category?: components["schemas"]["Category"];
    };
    /** @description The notification data structure */
    CategoryDeleteEvent: {
      event?: components["schemas"]["CategoryDeleteEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    CategoryDeleteEventPayload: {
      category?: components["schemas"]["Category"];
    };
    /** @description The notification data structure */
    ProductOfferingCreateEvent: {
      event?: components["schemas"]["ProductOfferingCreateEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    ProductOfferingCreateEventPayload: {
      productOffering?: components["schemas"]["ProductOffering"];
    };
    /** @description The notification data structure */
    ProductOfferingAttributeValueChangeEvent: {
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      /** @description The path identifying the object field concerned by this notification. */
      fieldPath?: string;
      event?: components["schemas"]["ProductOfferingAttributeValueChangeEventPayload"];
    };
    /** @description The event data structure */
    ProductOfferingAttributeValueChangeEventPayload: {
      productOffering?: components["schemas"]["ProductOffering"];
    };
    /** @description The notification data structure */
    ProductOfferingStateChangeEvent: {
      event?: components["schemas"]["ProductOfferingStateChangeEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    ProductOfferingStateChangeEventPayload: {
      productOffering?: components["schemas"]["ProductOffering"];
    };
    /** @description The notification data structure */
    ProductOfferingDeleteEvent: {
      event?: components["schemas"]["ProductOfferingDeleteEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    ProductOfferingDeleteEventPayload: {
      productOffering?: components["schemas"]["ProductOffering"];
    };
    /** @description The notification data structure */
    ProductOfferingPriceCreateEvent: {
      event?: components["schemas"]["ProductOfferingPriceCreateEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    ProductOfferingPriceCreateEventPayload: {
      productOfferingPrice?: components["schemas"]["ProductOfferingPrice"];
    };
    /** @description The notification data structure */
    ProductOfferingPriceAttributeValueChangeEvent: {
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      /** @description The path identifying the object field concerned by this notification. */
      fieldPath?: string;
      event?: components["schemas"]["ProductOfferingPriceAttributeValueChangeEventPayload"];
    };
    /** @description The event data structure */
    ProductOfferingPriceAttributeValueChangeEventPayload: {
      productOfferingPrice?: components["schemas"]["ProductOfferingPrice"];
    };
    /** @description The notification data structure */
    ProductOfferingPriceStateChangeEvent: {
      event?: components["schemas"]["ProductOfferingPriceStateChangeEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    ProductOfferingPriceStateChangeEventPayload: {
      productOfferingPrice?: components["schemas"]["ProductOfferingPrice"];
    };
    /** @description The notification data structure */
    ProductOfferingPriceDeleteEvent: {
      event?: components["schemas"]["ProductOfferingPriceDeleteEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    ProductOfferingPriceDeleteEventPayload: {
      productOfferingPrice?: components["schemas"]["ProductOfferingPrice"];
    };
    /** @description The notification data structure */
    ProductSpecificationCreateEvent: {
      event?: components["schemas"]["ProductSpecificationCreateEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    ProductSpecificationCreateEventPayload: {
      productSpecification?: components["schemas"]["ProductSpecification"];
    };
    /** @description The notification data structure */
    ProductSpecificationAttributeValueChangeEvent: {
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      /** @description The path identifying the object field concerned by this notification. */
      fieldPath?: string;
      event?: components["schemas"]["ProductSpecificationAttributeValueChangeEventPayload"];
    };
    /** @description The event data structure */
    ProductSpecificationAttributeValueChangeEventPayload: {
      productSpecification?: components["schemas"]["ProductSpecification"];
    };
    /** @description The notification data structure */
    ProductSpecificationStateChangeEvent: {
      event?: components["schemas"]["ProductSpecificationStateChangeEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    ProductSpecificationStateChangeEventPayload: {
      productSpecification?: components["schemas"]["ProductSpecification"];
    };
    /** @description The notification data structure */
    ProductSpecificationDeleteEvent: {
      event?: components["schemas"]["ProductSpecificationDeleteEventPayload"];
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
    };
    /** @description The event data structure */
    ProductSpecificationDeleteEventPayload: {
      productSpecification?: components["schemas"]["ProductSpecification"];
    };
    /** @description Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx) */
    Error: {
      /** @description Application relevant detail, defined in the API or a common list. */
      code: string;
      /** @description Explanation of the reason for the error which can be shown to a client user. */
      reason: string;
      /** @description More details and corrective actions related to the error which can be shown to a client user. */
      message?: string;
      /** @description HTTP Error code extension */
      status?: string;
      /**
       * Format: uri
       * @description URI of documentation describing the error.
       */
      referenceError?: string;
      /** @description When sub-classing, this defines the super-class. */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name. */
      "@type"?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * List or find Catalog objects
   * @description This operation list or find Catalog entities
   */
  listCatalog: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to be provided in response */
        fields?: string;
        /** @description Requested index for start of resources to be provided in response */
        offset?: number;
        /** @description Requested number of resources to be provided in response */
        limit?: number;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          /** @description Total number of items matching criteria */
          "X-Total-Count"?: number;
          /** @description Actual number of items returned in the response body */
          "X-Result-Count"?: number;
        };
        content: {
          "application/json;charset=utf-8": components["schemas"]["Catalog"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Creates a Catalog
   * @description This operation creates a Catalog entity.
   */
  createCatalog: {
    /** @description The Catalog to be created */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["Catalog_Create"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Catalog"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieves a Catalog by ID
   * @description This operation retrieves a Catalog entity. Attribute selection is enabled for all first level attributes.
   */
  retrieveCatalog: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to provide in response */
        fields?: string;
      };
      path: {
        /** @description Identifier of the Catalog */
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Catalog"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a Catalog
   * @description This operation deletes a Catalog entity.
   */
  deleteCatalog: {
    parameters: {
      path: {
        /** @description Identifier of the Catalog */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates partially a Catalog
   * @description This operation updates partially a Catalog entity.
   */
  patchCatalog: {
    parameters: {
      path: {
        /** @description Identifier of the Catalog */
        id: string;
      };
    };
    /** @description The Catalog to be updated */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["Catalog_Update"];
      };
    };
    responses: {
      /** @description Updated */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Catalog"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * List or find Category objects
   * @description This operation list or find Category entities
   */
  listCategory: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to be provided in response */
        fields?: string;
        /** @description Requested index for start of resources to be provided in response */
        offset?: number;
        /** @description Requested number of resources to be provided in response */
        limit?: number;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          /** @description Total number of items matching criteria */
          "X-Total-Count"?: number;
          /** @description Actual number of items returned in the response body */
          "X-Result-Count"?: number;
        };
        content: {
          "application/json;charset=utf-8": components["schemas"]["Category"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Creates a Category
   * @description This operation creates a Category entity.
   */
  createCategory: {
    /** @description The Category to be created */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["Category_Create"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Category"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieves a Category by ID
   * @description This operation retrieves a Category entity. Attribute selection is enabled for all first level attributes.
   */
  retrieveCategory: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to provide in response */
        fields?: string;
      };
      path: {
        /** @description Identifier of the Category */
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Category"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a Category
   * @description This operation deletes a Category entity.
   */
  deleteCategory: {
    parameters: {
      path: {
        /** @description Identifier of the Category */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates partially a Category
   * @description This operation updates partially a Category entity.
   */
  patchCategory: {
    parameters: {
      path: {
        /** @description Identifier of the Category */
        id: string;
      };
    };
    /** @description The Category to be updated */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["Category_Update"];
      };
    };
    responses: {
      /** @description Updated */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Category"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * List or find ProductOffering objects
   * @description This operation list or find ProductOffering entities
   */
  listProductOffering: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to be provided in response */
        fields?: string;
        /** @description Requested index for start of resources to be provided in response */
        offset?: number;
        /** @description Requested number of resources to be provided in response */
        limit?: number;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          /** @description Total number of items matching criteria */
          "X-Total-Count"?: number;
          /** @description Actual number of items returned in the response body */
          "X-Result-Count"?: number;
        };
        content: {
          "application/json;charset=utf-8": components["schemas"]["ProductOffering"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Creates a ProductOffering
   * @description This operation creates a ProductOffering entity.
   */
  createProductOffering: {
    /** @description The ProductOffering to be created */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductOffering_Create"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ProductOffering"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieves a ProductOffering by ID
   * @description This operation retrieves a ProductOffering entity. Attribute selection is enabled for all first level attributes.
   */
  retrieveProductOffering: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to provide in response */
        fields?: string;
      };
      path: {
        /** @description Identifier of the ProductOffering */
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ProductOffering"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a ProductOffering
   * @description This operation deletes a ProductOffering entity.
   */
  deleteProductOffering: {
    parameters: {
      path: {
        /** @description Identifier of the ProductOffering */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates partially a ProductOffering
   * @description This operation updates partially a ProductOffering entity.
   */
  patchProductOffering: {
    parameters: {
      path: {
        /** @description Identifier of the ProductOffering */
        id: string;
      };
    };
    /** @description The ProductOffering to be updated */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductOffering_Update"];
      };
    };
    responses: {
      /** @description Updated */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ProductOffering"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * List or find ProductOfferingPrice objects
   * @description This operation list or find ProductOfferingPrice entities
   */
  listProductOfferingPrice: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to be provided in response */
        fields?: string;
        /** @description Requested index for start of resources to be provided in response */
        offset?: number;
        /** @description Requested number of resources to be provided in response */
        limit?: number;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          /** @description Total number of items matching criteria */
          "X-Total-Count"?: number;
          /** @description Actual number of items returned in the response body */
          "X-Result-Count"?: number;
        };
        content: {
          "application/json;charset=utf-8": components["schemas"]["ProductOfferingPrice"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Creates a ProductOfferingPrice
   * @description This operation creates a ProductOfferingPrice entity.
   */
  createProductOfferingPrice: {
    /** @description The ProductOfferingPrice to be created */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductOfferingPrice_Create"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ProductOfferingPrice"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieves a ProductOfferingPrice by ID
   * @description This operation retrieves a ProductOfferingPrice entity. Attribute selection is enabled for all first level attributes.
   */
  retrieveProductOfferingPrice: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to provide in response */
        fields?: string;
      };
      path: {
        /** @description Identifier of the ProductOfferingPrice */
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ProductOfferingPrice"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a ProductOfferingPrice
   * @description This operation deletes a ProductOfferingPrice entity.
   */
  deleteProductOfferingPrice: {
    parameters: {
      path: {
        /** @description Identifier of the ProductOfferingPrice */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates partially a ProductOfferingPrice
   * @description This operation updates partially a ProductOfferingPrice entity.
   */
  patchProductOfferingPrice: {
    parameters: {
      path: {
        /** @description Identifier of the ProductOfferingPrice */
        id: string;
      };
    };
    /** @description The ProductOfferingPrice to be updated */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductOfferingPrice_Update"];
      };
    };
    responses: {
      /** @description Updated */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ProductOfferingPrice"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * List or find ProductSpecification objects
   * @description This operation list or find ProductSpecification entities
   */
  listProductSpecification: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to be provided in response */
        fields?: string;
        /** @description Requested index for start of resources to be provided in response */
        offset?: number;
        /** @description Requested number of resources to be provided in response */
        limit?: number;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          /** @description Total number of items matching criteria */
          "X-Total-Count"?: number;
          /** @description Actual number of items returned in the response body */
          "X-Result-Count"?: number;
        };
        content: {
          "application/json;charset=utf-8": components["schemas"]["ProductSpecification"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Creates a ProductSpecification
   * @description This operation creates a ProductSpecification entity.
   */
  createProductSpecification: {
    /** @description The ProductSpecification to be created */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductSpecification_Create"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ProductSpecification"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieves a ProductSpecification by ID
   * @description This operation retrieves a ProductSpecification entity. Attribute selection is enabled for all first level attributes.
   */
  retrieveProductSpecification: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to provide in response */
        fields?: string;
      };
      path: {
        /** @description Identifier of the ProductSpecification */
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ProductSpecification"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a ProductSpecification
   * @description This operation deletes a ProductSpecification entity.
   */
  deleteProductSpecification: {
    parameters: {
      path: {
        /** @description Identifier of the ProductSpecification */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates partially a ProductSpecification
   * @description This operation updates partially a ProductSpecification entity.
   */
  patchProductSpecification: {
    parameters: {
      path: {
        /** @description Identifier of the ProductSpecification */
        id: string;
      };
    };
    /** @description The ProductSpecification to be updated */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductSpecification_Update"];
      };
    };
    responses: {
      /** @description Updated */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ProductSpecification"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * List or find ImportJob objects
   * @description This operation list or find ImportJob entities
   */
  listImportJob: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to be provided in response */
        fields?: string;
        /** @description Requested index for start of resources to be provided in response */
        offset?: number;
        /** @description Requested number of resources to be provided in response */
        limit?: number;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          /** @description Total number of items matching criteria */
          "X-Total-Count"?: number;
          /** @description Actual number of items returned in the response body */
          "X-Result-Count"?: number;
        };
        content: {
          "application/json;charset=utf-8": components["schemas"]["ImportJob"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Creates a ImportJob
   * @description This operation creates a ImportJob entity.
   */
  createImportJob: {
    /** @description The ImportJob to be created */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ImportJob_Create"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ImportJob"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieves a ImportJob by ID
   * @description This operation retrieves a ImportJob entity. Attribute selection is enabled for all first level attributes.
   */
  retrieveImportJob: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to provide in response */
        fields?: string;
      };
      path: {
        /** @description Identifier of the ImportJob */
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ImportJob"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a ImportJob
   * @description This operation deletes a ImportJob entity.
   */
  deleteImportJob: {
    parameters: {
      path: {
        /** @description Identifier of the ImportJob */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * List or find ExportJob objects
   * @description This operation list or find ExportJob entities
   */
  listExportJob: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to be provided in response */
        fields?: string;
        /** @description Requested index for start of resources to be provided in response */
        offset?: number;
        /** @description Requested number of resources to be provided in response */
        limit?: number;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          /** @description Total number of items matching criteria */
          "X-Total-Count"?: number;
          /** @description Actual number of items returned in the response body */
          "X-Result-Count"?: number;
        };
        content: {
          "application/json;charset=utf-8": components["schemas"]["ExportJob"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Creates a ExportJob
   * @description This operation creates a ExportJob entity.
   */
  createExportJob: {
    /** @description The ExportJob to be created */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ExportJob_Create"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ExportJob"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieves a ExportJob by ID
   * @description This operation retrieves a ExportJob entity. Attribute selection is enabled for all first level attributes.
   */
  retrieveExportJob: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to provide in response */
        fields?: string;
      };
      path: {
        /** @description Identifier of the ExportJob */
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ExportJob"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a ExportJob
   * @description This operation deletes a ExportJob entity.
   */
  deleteExportJob: {
    parameters: {
      path: {
        /** @description Identifier of the ExportJob */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Register a listener
   * @description Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
   */
  registerListener: {
    /** @description Data containing the callback endpoint to deliver the information */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["EventSubscriptionInput"];
      };
    };
    responses: {
      /** @description Subscribed */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Unregister a listener
   * @description Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
   */
  unregisterListener: {
    parameters: {
      path: {
        /** @description The id of the registered listener */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity CatalogCreateEvent
   * @description Example of a client listener for receiving the notification CatalogCreateEvent
   */
  listenToCatalogCreateEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["CatalogCreateEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity CatalogAttributeValueChangeEvent
   * @description Example of a client listener for receiving the notification CatalogAttributeValueChangeEvent
   */
  listenToCatalogAttributeValueChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["CatalogAttributeValueChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity CatalogStateChangeEvent
   * @description Example of a client listener for receiving the notification CatalogStateChangeEvent
   */
  listenToCatalogStateChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["CatalogStateChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity CatalogDeleteEvent
   * @description Example of a client listener for receiving the notification CatalogDeleteEvent
   */
  listenToCatalogDeleteEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["CatalogDeleteEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity CatalogBatchEvent
   * @description Example of a client listener for receiving the notification CatalogBatchEvent
   */
  listenToCatalogBatchEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["CatalogBatchEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity CategoryCreateEvent
   * @description Example of a client listener for receiving the notification CategoryCreateEvent
   */
  listenToCategoryCreateEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["CategoryCreateEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity CategoryAttributeValueChangeEvent
   * @description Example of a client listener for receiving the notification CategoryAttributeValueChangeEvent
   */
  listenToCategoryAttributeValueChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["CategoryAttributeValueChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity CategoryStateChangeEvent
   * @description Example of a client listener for receiving the notification CategoryStateChangeEvent
   */
  listenToCategoryStateChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["CategoryStateChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity CategoryDeleteEvent
   * @description Example of a client listener for receiving the notification CategoryDeleteEvent
   */
  listenToCategoryDeleteEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["CategoryDeleteEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ProductOfferingCreateEvent
   * @description Example of a client listener for receiving the notification ProductOfferingCreateEvent
   */
  listenToProductOfferingCreateEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductOfferingCreateEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ProductOfferingAttributeValueChangeEvent
   * @description Example of a client listener for receiving the notification ProductOfferingAttributeValueChangeEvent
   */
  listenToProductOfferingAttributeValueChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductOfferingAttributeValueChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ProductOfferingStateChangeEvent
   * @description Example of a client listener for receiving the notification ProductOfferingStateChangeEvent
   */
  listenToProductOfferingStateChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductOfferingStateChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ProductOfferingDeleteEvent
   * @description Example of a client listener for receiving the notification ProductOfferingDeleteEvent
   */
  listenToProductOfferingDeleteEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductOfferingDeleteEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ProductOfferingPriceCreateEvent
   * @description Example of a client listener for receiving the notification ProductOfferingPriceCreateEvent
   */
  listenToProductOfferingPriceCreateEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductOfferingPriceCreateEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ProductOfferingPriceAttributeValueChangeEvent
   * @description Example of a client listener for receiving the notification ProductOfferingPriceAttributeValueChangeEvent
   */
  listenToProductOfferingPriceAttributeValueChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductOfferingPriceAttributeValueChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ProductOfferingPriceStateChangeEvent
   * @description Example of a client listener for receiving the notification ProductOfferingPriceStateChangeEvent
   */
  listenToProductOfferingPriceStateChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductOfferingPriceStateChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ProductOfferingPriceDeleteEvent
   * @description Example of a client listener for receiving the notification ProductOfferingPriceDeleteEvent
   */
  listenToProductOfferingPriceDeleteEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductOfferingPriceDeleteEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ProductSpecificationCreateEvent
   * @description Example of a client listener for receiving the notification ProductSpecificationCreateEvent
   */
  listenToProductSpecificationCreateEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductSpecificationCreateEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ProductSpecificationAttributeValueChangeEvent
   * @description Example of a client listener for receiving the notification ProductSpecificationAttributeValueChangeEvent
   */
  listenToProductSpecificationAttributeValueChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductSpecificationAttributeValueChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ProductSpecificationStateChangeEvent
   * @description Example of a client listener for receiving the notification ProductSpecificationStateChangeEvent
   */
  listenToProductSpecificationStateChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductSpecificationStateChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ProductSpecificationDeleteEvent
   * @description Example of a client listener for receiving the notification ProductSpecificationDeleteEvent
   */
  listenToProductSpecificationDeleteEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ProductSpecificationDeleteEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
}
