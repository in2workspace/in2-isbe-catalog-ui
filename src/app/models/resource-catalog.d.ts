/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/resourceCatalog": {
    /**
     * List or find ResourceCatalog objects
     * @description This operation list or find ResourceCatalog entities
     */
    get: operations["listResourceCatalog"];
    /**
     * Creates a ResourceCatalog
     * @description This operation creates a ResourceCatalog entity.
     */
    post: operations["createResourceCatalog"];
  };
  "/resourceCatalog/{id}": {
    /**
     * Retrieves a ResourceCatalog by ID
     * @description This operation retrieves a ResourceCatalog entity. Attribute selection is enabled for all first level attributes.
     */
    get: operations["retrieveResourceCatalog"];
    /**
     * Deletes a ResourceCatalog
     * @description This operation deletes a ResourceCatalog entity.
     */
    delete: operations["deleteResourceCatalog"];
    /**
     * Updates partially a ResourceCatalog
     * @description This operation updates partially a ResourceCatalog entity.
     */
    patch: operations["patchResourceCatalog"];
  };
  "/resourceCategory": {
    /**
     * List or find ResourceCategory objects
     * @description This operation list or find ResourceCategory entities
     */
    get: operations["listResourceCategory"];
    /**
     * Creates a ResourceCategory
     * @description This operation creates a ResourceCategory entity.
     */
    post: operations["createResourceCategory"];
  };
  "/resourceCategory/{id}": {
    /**
     * Retrieves a ResourceCategory by ID
     * @description This operation retrieves a ResourceCategory entity. Attribute selection is enabled for all first level attributes.
     */
    get: operations["retrieveResourceCategory"];
    /**
     * Deletes a ResourceCategory
     * @description This operation deletes a ResourceCategory entity.
     */
    delete: operations["deleteResourceCategory"];
    /**
     * Updates partially a ResourceCategory
     * @description This operation updates partially a ResourceCategory entity.
     */
    patch: operations["patchResourceCategory"];
  };
  "/resourceCandidate": {
    /**
     * List or find ResourceCandidate objects
     * @description This operation list or find ResourceCandidate entities
     */
    get: operations["listResourceCandidate"];
    /**
     * Creates a ResourceCandidate
     * @description This operation creates a ResourceCandidate entity.
     */
    post: operations["createResourceCandidate"];
  };
  "/resourceCandidate/{id}": {
    /**
     * Retrieves a ResourceCandidate by ID
     * @description This operation retrieves a ResourceCandidate entity. Attribute selection is enabled for all first level attributes.
     */
    get: operations["retrieveResourceCandidate"];
    /**
     * Deletes a ResourceCandidate
     * @description This operation deletes a ResourceCandidate entity.
     */
    delete: operations["deleteResourceCandidate"];
    /**
     * Updates partially a ResourceCandidate
     * @description This operation updates partially a ResourceCandidate entity.
     */
    patch: operations["patchResourceCandidate"];
  };
  "/resourceSpecification": {
    /**
     * List or find ResourceSpecification objects
     * @description This operation list or find ResourceSpecification entities
     */
    get: operations["listResourceSpecification"];
    /**
     * Creates a ResourceSpecification
     * @description This operation creates a ResourceSpecification entity.
     */
    post: operations["createResourceSpecification"];
  };
  "/resourceSpecification/{id}": {
    /**
     * Retrieves a ResourceSpecification by ID
     * @description This operation retrieves a ResourceSpecification entity. Attribute selection is enabled for all first level attributes.
     */
    get: operations["retrieveResourceSpecification"];
    /**
     * Deletes a ResourceSpecification
     * @description This operation deletes a ResourceSpecification entity.
     */
    delete: operations["deleteResourceSpecification"];
    /**
     * Updates partially a ResourceSpecification
     * @description This operation updates partially a ResourceSpecification entity.
     */
    patch: operations["patchResourceSpecification"];
  };
  "/importJob": {
    /**
     * List or find ImportJob objects
     * @description This operation list or find ImportJob entities
     */
    get: operations["listImportJob"];
    /**
     * Creates a ImportJob
     * @description This operation creates a ImportJob entity.
     */
    post: operations["createImportJob"];
  };
  "/importJob/{id}": {
    /**
     * Retrieves a ImportJob by ID
     * @description This operation retrieves a ImportJob entity. Attribute selection is enabled for all first level attributes.
     */
    get: operations["retrieveImportJob"];
    /**
     * Deletes a ImportJob
     * @description This operation deletes a ImportJob entity.
     */
    delete: operations["deleteImportJob"];
  };
  "/exportJob": {
    /**
     * List or find ExportJob objects
     * @description This operation list or find ExportJob entities
     */
    get: operations["listExportJob"];
    /**
     * Creates a ExportJob
     * @description This operation creates a ExportJob entity.
     */
    post: operations["createExportJob"];
  };
  "/exportJob/{id}": {
    /**
     * Retrieves a ExportJob by ID
     * @description This operation retrieves a ExportJob entity. Attribute selection is enabled for all first level attributes.
     */
    get: operations["retrieveExportJob"];
    /**
     * Deletes a ExportJob
     * @description This operation deletes a ExportJob entity.
     */
    delete: operations["deleteExportJob"];
  };
  "/hub": {
    /**
     * Register a listener
     * @description Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
     */
    post: operations["registerListener"];
  };
  "/hub/{id}": {
    /**
     * Unregister a listener
     * @description Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
     */
    delete: operations["unregisterListener"];
  };
  "/listener/resourceCatalogCreateEvent": {
    /**
     * Client listener for entity ResourceCatalogCreateEvent
     * @description Example of a client listener for receiving the notification ResourceCatalogCreateEvent
     */
    post: operations["listenToResourceCatalogCreateEvent"];
  };
  "/listener/resourceCatalogChangeEvent": {
    /**
     * Client listener for entity ResourceCatalogChangeEvent
     * @description Example of a client listener for receiving the notification ResourceCatalogChangeEvent
     */
    post: operations["listenToResourceCatalogChangeEvent"];
  };
  "/listener/resourceCatalogDeleteEvent": {
    /**
     * Client listener for entity ResourceCatalogDeleteEvent
     * @description Example of a client listener for receiving the notification ResourceCatalogDeleteEvent
     */
    post: operations["listenToResourceCatalogDeleteEvent"];
  };
  "/listener/resourceCategoryCreateEvent": {
    /**
     * Client listener for entity ResourceCategoryCreateEvent
     * @description Example of a client listener for receiving the notification ResourceCategoryCreateEvent
     */
    post: operations["listenToResourceCategoryCreateEvent"];
  };
  "/listener/resourceCategoryChangeEvent": {
    /**
     * Client listener for entity ResourceCategoryChangeEvent
     * @description Example of a client listener for receiving the notification ResourceCategoryChangeEvent
     */
    post: operations["listenToResourceCategoryChangeEvent"];
  };
  "/listener/resourceCategoryDeleteEvent": {
    /**
     * Client listener for entity ResourceCategoryDeleteEvent
     * @description Example of a client listener for receiving the notification ResourceCategoryDeleteEvent
     */
    post: operations["listenToResourceCategoryDeleteEvent"];
  };
  "/listener/resourceCandidateCreateEvent": {
    /**
     * Client listener for entity ResourceCandidateCreateEvent
     * @description Example of a client listener for receiving the notification ResourceCandidateCreateEvent
     */
    post: operations["listenToResourceCandidateCreateEvent"];
  };
  "/listener/resourceCandidateChangeEvent": {
    /**
     * Client listener for entity ResourceCandidateChangeEvent
     * @description Example of a client listener for receiving the notification ResourceCandidateChangeEvent
     */
    post: operations["listenToResourceCandidateChangeEvent"];
  };
  "/listener/resourceCandidateDeleteEvent": {
    /**
     * Client listener for entity ResourceCandidateDeleteEvent
     * @description Example of a client listener for receiving the notification ResourceCandidateDeleteEvent
     */
    post: operations["listenToResourceCandidateDeleteEvent"];
  };
  "/listener/resourceSpecificationCreateEvent": {
    /**
     * Client listener for entity ResourceSpecificationCreateEvent
     * @description Example of a client listener for receiving the notification ResourceSpecificationCreateEvent
     */
    post: operations["listenToResourceSpecificationCreateEvent"];
  };
  "/listener/resourceSpecificationChangeEvent": {
    /**
     * Client listener for entity ResourceSpecificationChangeEvent
     * @description Example of a client listener for receiving the notification ResourceSpecificationChangeEvent
     */
    post: operations["listenToResourceSpecificationChangeEvent"];
  };
  "/listener/resourceSpecificationDeleteEvent": {
    /**
     * Client listener for entity ResourceSpecificationDeleteEvent
     * @description Example of a client listener for receiving the notification ResourceSpecificationDeleteEvent
     */
    post: operations["listenToResourceSpecificationDeleteEvent"];
  };
  "/listener/importJobCreateEvent": {
    /**
     * Client listener for entity ImportJobCreateEvent
     * @description Example of a client listener for receiving the notification ImportJobCreateEvent
     */
    post: operations["listenToImportJobCreateEvent"];
  };
  "/listener/importJobStateChangeEvent": {
    /**
     * Client listener for entity ImportJobStateChangeEvent
     * @description Example of a client listener for receiving the notification ImportJobStateChangeEvent
     */
    post: operations["listenToImportJobStateChangeEvent"];
  };
  "/listener/exportJobCreateEvent": {
    /**
     * Client listener for entity ExportJobCreateEvent
     * @description Example of a client listener for receiving the notification ExportJobCreateEvent
     */
    post: operations["listenToExportJobCreateEvent"];
  };
  "/listener/exportJobStateChangeEvent": {
    /**
     * Client listener for entity ExportJobStateChangeEvent
     * @description Example of a client listener for receiving the notification ExportJobStateChangeEvent
     */
    post: operations["listenToExportJobStateChangeEvent"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Any: Record<string, never>;
    /** @description Complements the description of an element (for instance a product) through video, pictures... */
    Attachment: {
      /** @description Unique identifier for this particular attachment */
      id?: string;
      /** @description URI for this Attachment */
      href?: string;
      /** @description Attachment type such as video, picture */
      attachmentType?: string;
      /** @description The actual contents of the attachment object, if embedded, encoded as base64 */
      content?: string;
      /** @description A narrative text describing the content of the attachment */
      description?: string;
      /** @description Attachment mime type such as extension file for video, picture and document */
      mimeType?: string;
      /** @description The name of the attachment */
      name?: string;
      /** @description Uniform Resource Locator, is a web page address (a subset of URI) */
      url?: string;
      size?: components["schemas"]["Quantity"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /** @description Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures */
    AttachmentRef: {
      /** @description Unique-Identifier for this attachment */
      id: string;
      /** @description URL serving as reference for the attachment resource */
      href?: string;
      /** @description A narrative text describing the content of the attachment */
      description?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description Link to the attachment media/content */
      url?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description An attachment by value or by reference. For AttachmentRefOrValue, the attribute type,schemaLocation and referredType are related to the contained entity and not to AttchmentRefOrValue itself */
    AttachmentRefOrValue: {
      /** @description Unique identifier for this particular attachment */
      id?: string;
      /** @description URI for this Attachment */
      href?: string;
      /** @description Attachment type such as video, picture */
      attachmentType?: string;
      /** @description The actual contents of the attachment object, if embedded, encoded as base64 */
      content?: string;
      /** @description A narrative text describing the content of the attachment */
      description?: string;
      /** @description Attachment mime type such as extension file for video, picture and document */
      mimeType?: string;
      /** @description The name of the attachment */
      name?: string;
      /** @description Uniform Resource Locator, is a web page address (a subset of URI) */
      url?: string;
      size?: components["schemas"]["Quantity"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec. */
    ConstraintRef: {
      /** @description reference id to the target constraint */
      id: string;
      /** @description Hyperlink reference to the target constraint */
      href?: string;
      /** @description Name given to the constraint */
      name?: string;
      /** @description constraint version */
      version?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
      /** @description The (class) type of the referred constraint */
      "@referredType"?: string;
    };
    /** @description Entity reference schema to be use for all entityRef class. */
    EntityRef: {
      /** @description Unique identifier of a related entity. */
      id: string;
      /** @description Reference of the related entity. */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description Represents a task used to export resources to a file */
    ExportJob: {
      /** @description Identifier of the export job */
      id?: string;
      /** @description Reference of the export job */
      href?: string;
      /**
       * Format: date-time
       * @description Data at which the job was completed
       */
      completionDate?: string;
      /** @description The format of the exported data */
      contentType?: string;
      /**
       * Format: date-time
       * @description Date at which the job was created
       */
      creationDate?: string;
      /** @description Reason for failure */
      errorLog?: string;
      /** @description URL of the root resource acting as the source for streaming content to the file specified by the export job */
      path?: string;
      /** @description Used to scope the exported data */
      query?: string;
      /** @description URL of the file containing the data to be exported */
      url?: string;
      status?: components["schemas"]["JobStateType"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /**
     * @description Represents a task used to export resources to a file
     * Skipped properties: id,href
     */
    ExportJob_Create: {
      /**
       * Format: date-time
       * @description Data at which the job was completed
       */
      completionDate?: string;
      /** @description The format of the exported data */
      contentType?: string;
      /**
       * Format: date-time
       * @description Date at which the job was created
       */
      creationDate?: string;
      /** @description Reason for failure */
      errorLog?: string;
      /** @description URL of the root resource acting as the source for streaming content to the file specified by the export job */
      path?: string;
      /** @description Used to scope the exported data */
      query?: string;
      /** @description URL of the file containing the data to be exported */
      url: string;
      status?: components["schemas"]["JobStateType"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /** @description Specification for applicable configuration features for a resource specification. */
    FeatureSpecification: {
      /** @description Identifier of the feature specification. Must be locally unique within the containing resource specification, thus allowing direct access to the feature spec. */
      id?: string;
      /** @description A flag indicating if this is a feature group (true) or not (false) */
      isBundle?: boolean;
      /** @description A flag indicating if the feature is enabled (true) or not (false) */
      isEnabled?: boolean;
      /** @description Unique name given to the feature specification */
      name?: string;
      /** @description Version of the feature specification */
      version?: string;
      /** @description This is a list of feature constraints */
      constraint?: components["schemas"]["ConstraintRef"][];
      /** @description This is a list of characteristics for a particular feature */
      featureSpecCharacteristic?: components["schemas"]["FeatureSpecificationCharacteristic"][];
      /** @description A dependency, exclusivity or aggratation relationship between/among feature specifications. */
      featureSpecRelationship?: components["schemas"]["FeatureSpecificationRelationship"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /** @description Configuration feature characteristic specification. */
    FeatureSpecificationCharacteristic: {
      /** @description True is the feature is configurable. */
      configurable?: boolean;
      /** @description An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a feature. */
      extensible?: boolean;
      /** @description An indicator that specifies if a value is unique for the specification. */
      isUnique?: boolean;
      /** @description The maximum number of instances a CharacteristicValue can take on. */
      maxCardinality?: number;
      /** @description The minimum number of instances a CharacteristicValue can take on. */
      minCardinality?: number;
      /** @description This is the name for the feature charateristic. */
      name: string;
      /** @description A rule or principle represented in regular expression used to derive the value of a characteristic value. */
      regex?: string;
      /** @description A kind of value that the characteristic can take on. */
      valueType?: string;
      /** @description An aggregation, migration, substitution, dependency or exclusivity relationship between/among feature characteristics. */
      featureSpecCharRelationship?: components["schemas"]["FeatureSpecificationCharacteristicRelationship"][];
      /** @description Used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a FeatureCharacteristic object. */
      featureSpecCharacteristicValue?: components["schemas"]["FeatureSpecificationCharacteristicValue"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
      /** @description This (optional) field provides a link to the schema describing the value type. */
      "@valueSchemaLocation"?: string;
    };
    /** @description An aggregation, migration, substitution, dependency or exclusivity relationship between/among FeatureSpecificationCharacteristics. */
    FeatureSpecificationCharacteristicRelationship: {
      /** @description Unique identifier of the characteristic within the the target feature specification */
      characteristicId?: string;
      /** @description Unique identifier of the target feature specification within the resource specification. */
      featureId?: string;
      /** @description Name of the target characteristic */
      name?: string;
      /** @description Type of relationship such as aggregation, migration, substitution, dependency, exclusivity */
      relationshipType?: string;
      /** @description Hyperlink reference to the resource specification containing the target feature and feature characteristic */
      resourceSpecificationHref?: string;
      /** @description Unique identifier of the resource specification containing the target feature and feature characteristic */
      resourceSpecificationId?: string;
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /** @description A number or text that can be assigned to a FeatureSpecificationCharacteristic. */
    FeatureSpecificationCharacteristicValue: {
      /** @description True if the value is the default value for a characteristic. */
      isDefault?: boolean;
      /** @description Specifies the inclusion or exclusion of the valueFrom and valueTo attributes. */
      rangeInterval?: string;
      /** @description A regular expression constraint for given value. */
      regex?: string;
      /** @description A determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values. */
      unitOfMeasure?: string;
      /** @description The low range value that a characteristic can take on. */
      valueFrom?: number;
      /** @description The upper range value that a characteristic can take on. */
      valueTo?: number;
      /** @description A kind of value that the characteristic value can take on. */
      valueType: string;
      validFor?: components["schemas"]["TimePeriod"];
      value?: components["schemas"]["Any"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /** @description Configuration feature */
    FeatureSpecificationRelationship: {
      /** @description Unique identifier of the target feature specification. */
      featureId?: string;
      /** @description This is the name of the target feature specification. */
      name: string;
      /** @description This is the type of the feature specification relationship. */
      relationshipType: string;
      /** @description Hyperlink reference to the resource specification containing the target feature */
      resourceSpecificationHref?: string;
      /** @description Unique identifier of the resource specification containing the target feature */
      resourceSpecificationId?: string;
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /** @description Represents a task used to import resources from a file */
    ImportJob: {
      /** @description Identifier of the import job */
      id?: string;
      /** @description Reference of the import job */
      href?: string;
      /**
       * Format: date-time
       * @description Date at which the job was completed
       */
      completionDate?: string;
      /** @description Indicates the format of the imported data */
      contentType?: string;
      /**
       * Format: date-time
       * @description Date at which the job was created
       */
      creationDate?: string;
      /** @description Reason for failure if status is failed */
      errorLog?: string;
      /** @description URL of the root resource where the content of the file specified by the import job must be applied */
      path?: string;
      /** @description URL of the file containing the data to be imported */
      url?: string;
      status?: components["schemas"]["JobStateType"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /**
     * @description Represents a task used to import resources from a file
     * Skipped properties: id,href
     */
    ImportJob_Create: {
      /**
       * Format: date-time
       * @description Date at which the job was completed
       */
      completionDate?: string;
      /** @description Indicates the format of the imported data */
      contentType?: string;
      /**
       * Format: date-time
       * @description Date at which the job was created
       */
      creationDate?: string;
      /** @description Reason for failure if status is failed */
      errorLog?: string;
      /** @description URL of the root resource where the content of the file specified by the import job must be applied */
      path?: string;
      /** @description URL of the file containing the data to be imported */
      url: string;
      status?: components["schemas"]["JobStateType"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /**
     * @description Valid values for the state of a batch job (e.g. catalog import)
     * @enum {string}
     */
    JobStateType: "Not Started" | "Running" | "Succeeded" | "Failed";
    /** @description This is a base class that is used to define the invariant characteristics and behavior (attributes, methods, constraints, and relationships) of a LogicalResource. */
    LogicalResourceSpecification: {
      /** @description Unique identifier of this REST resource */
      id?: string;
      /** @description Hyperlink reference to this REST resource */
      href?: string;
      /** @description Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic, L2Network and so on. */
      category?: string;
      /** @description Description of this REST resource */
      description?: string;
      /** @description A flag indicates that if this resource specification is a bundled specification (true) or single (false). */
      isBundle?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update of this REST resource
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status of the resource specification */
      lifecycleStatus?: string;
      /** @description Name given to this REST resource */
      name?: string;
      /** @description Resource Specification version */
      version?: string;
      /** @description Complements the description of an element (for instance a resource) through video, pictures ... */
      attachment?: components["schemas"]["AttachmentRefOrValue"][];
      /** @description A list of Features for this specification. */
      featureSpecification?: components["schemas"]["FeatureSpecification"][];
      /** @description A related party defines party or party role linked to a specific entity. */
      relatedParty?: components["schemas"]["RelatedParty"][];
      /** @description A characteristic quality or distinctive feature of a ResourceSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process. */
      resourceSpecCharacteristic?: components["schemas"]["ResourceSpecificationCharacteristic"][];
      /** @description A migration, substitution, dependency or exclusivity relationship between/among resource specifications. */
      resourceSpecRelationship?: components["schemas"]["ResourceSpecificationRelationship"][];
      targetResourceSchema?: components["schemas"]["TargetResourceSchema"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /** @description This is a concrete class that is used to define the invariant characteristics and behavior (attributes, methods, constraints, and relationships) of a PhysicalResource. */
    PhysicalResourceSpecification: {
      /** @description Unique identifier of this REST resource */
      id?: string;
      /** @description Hyperlink reference to this REST resource */
      href?: string;
      /** @description Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic, L2Network and so on. */
      category?: string;
      /** @description Description of this REST resource */
      description?: string;
      /** @description A flag indicates that if this resource specification is a bundled specification (true) or single (false). */
      isBundle?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update of this REST resource
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status of the resource specification */
      lifecycleStatus?: string;
      /** @description This is a string that represents a manufacturer-allocated number used to identify the general type and/or category of the hardware item. This, in combination with the Part and the Vendor, identify different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is an optional attribute. */
      model?: string;
      /** @description Name given to this REST resource */
      name?: string;
      /** @description This is a string that defines a manufacturer-allocated part number assigned by the organization that manufactures the hardware item. This, in combination with the Model and the Vendor, identify different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is a REQUIRED attribute. */
      part?: string;
      /** @description This is a string that defines the manufacturer-allocated Stock Keeping Unit (SKU) number of the hardware item. This is an optional attribute. */
      sku?: string;
      /** @description This is a string that defines the name of the manufacturer. This, in combination with the Model and the Part, identify different types of hardware items. The SerialNumber can then be used to differentiate between different instances of the same type of hardware item. This is a REQUIRED attribute for a physical resource. */
      vendor?: string;
      /** @description Resource Specification version */
      version?: string;
      /** @description Complements the description of an element (for instance a resource) through video, pictures ... */
      attachment?: components["schemas"]["AttachmentRefOrValue"][];
      /** @description A list of Features for this specification. */
      featureSpecification?: components["schemas"]["FeatureSpecification"][];
      /** @description A related party defines party or party role linked to a specific entity. */
      relatedParty?: components["schemas"]["RelatedParty"][];
      /** @description A characteristic quality or distinctive feature of a ResourceSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process. */
      resourceSpecCharacteristic?: components["schemas"]["ResourceSpecificationCharacteristic"][];
      /** @description A migration, substitution, dependency or exclusivity relationship between/among resource specifications. */
      resourceSpecRelationship?: components["schemas"]["ResourceSpecificationRelationship"][];
      targetResourceSchema?: components["schemas"]["TargetResourceSchema"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /** @description An amount in a given unit */
    Quantity: {
      /**
       * Format: float
       * @description Numeric value in a given unit
       * @default 1
       */
      amount?: number;
      /** @description Unit */
      units?: string;
    };
    /** @description Related Entity reference. A related party defines party or party role linked to a specific entity. */
    RelatedParty: {
      /** @description Unique identifier of a related entity. */
      id: string;
      /** @description Reference of the related entity. */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description Role played by the related party */
      role?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType": string;
    };
    /** @description ResourceCandidate is an entity that makes a resource specification available to a catalog. A ResourceCandidate and its associated resource specification may be published - made visible - in any number of resource catalogs, or in none. */
    ResourceCandidate: {
      /** @description Unique identifier of this REST resource */
      id?: string;
      /** @description Hyperlink reference to this REST resource */
      href?: string;
      /** @description Description of this REST resource */
      description?: string;
      /**
       * Format: date-time
       * @description Date and time of the last update of this REST resource
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status of the resource candidate. */
      lifecycleStatus?: string;
      /** @description Name given to this REST resource */
      name?: string;
      /** @description the version of resource candidate */
      version?: string;
      /** @description The categories in which this candidate is exposed */
      category?: components["schemas"]["ResourceCategoryRef"][];
      resourceSpecification?: components["schemas"]["ResourceSpecificationRef"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /**
     * @description ResourceCandidate is an entity that makes a resource specification available to a catalog. A ResourceCandidate and its associated resource specification may be published - made visible - in any number of resource catalogs, or in none.
     * Skipped properties: id,href
     */
    ResourceCandidate_Create: {
      /** @description Description of this REST resource */
      description?: string;
      /**
       * Format: date-time
       * @description Date and time of the last update of this REST resource
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status of the resource candidate. */
      lifecycleStatus?: string;
      /** @description Name given to this REST resource */
      name: string;
      /** @description the version of resource candidate */
      version?: string;
      /** @description The categories in which this candidate is exposed */
      category?: components["schemas"]["ResourceCategoryRef"][];
      resourceSpecification?: components["schemas"]["ResourceSpecificationRef"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /**
     * @description ResourceCandidate is an entity that makes a resource specification available to a catalog. A ResourceCandidate and its associated resource specification may be published - made visible - in any number of resource catalogs, or in none.
     * Skipped properties: id,href
     */
    ResourceCandidate_Update: {
      /** @description Description of this REST resource */
      description?: string;
      /**
       * Format: date-time
       * @description Date and time of the last update of this REST resource
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status of the resource candidate. */
      lifecycleStatus?: string;
      /** @description Name given to this REST resource */
      name?: string;
      /** @description the version of resource candidate */
      version?: string;
      /** @description The categories in which this candidate is exposed */
      category?: components["schemas"]["ResourceCategoryRef"][];
      resourceSpecification?: components["schemas"]["ResourceSpecificationRef"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /** @description ResourceCandidate is an entity that makes a resource specification available to a catalog. A ResourceCandidate and its associated resource specification may be published - made visible - in any number of resource catalogs, or in none. */
    ResourceCandidateRef: {
      /** @description Unique identifier of a related entity. */
      id: string;
      /** @description Reference of the related entity. */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description the version of resource candidate */
      version?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /**
     * @description The root entity for resource catalog management.
     * A resource catalog is a group of resource specifications made available through resource candidates that an organization provides to the consumers (internal consumers like its employees or B2B customers or B2C customers).
     */
    ResourceCatalog: {
      /** @description Unique identifier of the Catalog */
      id?: string;
      /** @description Unique reference of the catalog */
      href?: string;
      /** @description Description of this catalog */
      description?: string;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the catalog */
      name?: string;
      /** @description Catalog version */
      version?: string;
      /** @description List of root categories contained in this catalog */
      category?: components["schemas"]["ResourceCategoryRef"][];
      /** @description List of parties involved in this catalog */
      relatedParty?: components["schemas"]["RelatedParty"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /**
     * @description The root entity for resource catalog management.
     * A resource catalog is a group of resource specifications made available through resource candidates that an organization provides to the consumers (internal consumers like its employees or B2B customers or B2C customers).
     * Skipped properties: id,href
     */
    ResourceCatalog_Create: {
      /** @description Description of this catalog */
      description?: string;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the catalog */
      name: string;
      /** @description Catalog version */
      version?: string;
      /** @description List of root categories contained in this catalog */
      category?: components["schemas"]["ResourceCategoryRef"][];
      /** @description List of parties involved in this catalog */
      relatedParty?: components["schemas"]["RelatedParty"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /**
     * @description The root entity for resource catalog management.
     * A resource catalog is a group of resource specifications made available through resource candidates that an organization provides to the consumers (internal consumers like its employees or B2B customers or B2C customers).
     * Skipped properties: id,href
     */
    ResourceCatalog_Update: {
      /** @description Description of this catalog */
      description?: string;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the catalog */
      name?: string;
      /** @description Catalog version */
      version?: string;
      /** @description List of root categories contained in this catalog */
      category?: components["schemas"]["ResourceCategoryRef"][];
      /** @description List of parties involved in this catalog */
      relatedParty?: components["schemas"]["RelatedParty"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /** @description The (resource) category resource is used to group resource candidates in logical containers. Categories can contain other categories. */
    ResourceCategory: {
      /** @description Unique identifier of the category */
      id?: string;
      /** @description Hyperlink reference to the category */
      href?: string;
      /** @description Description of the category */
      description?: string;
      /** @description If true, this Boolean indicates that the category is a root of categories */
      isRoot?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the category */
      name?: string;
      /** @description Unique identifier of the parent category */
      parentId?: string;
      /** @description Category version */
      version?: string;
      /** @description The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other (sub-)categories and/or product offerings. */
      category?: components["schemas"]["ResourceCategoryRef"][];
      /** @description List of parties involved in this category */
      relatedParty?: components["schemas"]["RelatedParty"][];
      /** @description List of resource candidates accessible via this category */
      resourceCandidate?: components["schemas"]["ResourceCandidateRef"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /**
     * @description The (resource) category resource is used to group resource candidates in logical containers. Categories can contain other categories.
     * Skipped properties: id,href
     */
    ResourceCategory_Create: {
      /** @description Description of the category */
      description?: string;
      /** @description If true, this Boolean indicates that the category is a root of categories */
      isRoot?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the category */
      name: string;
      /** @description Unique identifier of the parent category */
      parentId?: string;
      /** @description Category version */
      version?: string;
      /** @description The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other (sub-)categories and/or product offerings. */
      category?: components["schemas"]["ResourceCategoryRef"][];
      /** @description List of parties involved in this category */
      relatedParty?: components["schemas"]["RelatedParty"][];
      /** @description List of resource candidates accessible via this category */
      resourceCandidate?: components["schemas"]["ResourceCandidateRef"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /**
     * @description The (resource) category resource is used to group resource candidates in logical containers. Categories can contain other categories.
     * Skipped properties: id,href
     */
    ResourceCategory_Update: {
      /** @description Description of the category */
      description?: string;
      /** @description If true, this Boolean indicates that the category is a root of categories */
      isRoot?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status */
      lifecycleStatus?: string;
      /** @description Name of the category */
      name?: string;
      /** @description Unique identifier of the parent category */
      parentId?: string;
      /** @description Category version */
      version?: string;
      /** @description The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other (sub-)categories and/or product offerings. */
      category?: components["schemas"]["ResourceCategoryRef"][];
      /** @description List of parties involved in this category */
      relatedParty?: components["schemas"]["RelatedParty"][];
      /** @description List of resource candidates accessible via this category */
      resourceCandidate?: components["schemas"]["ResourceCandidateRef"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /** @description The (resource) category resource is used to group resource candidates in logical containers. Categories can contain other categories. */
    ResourceCategoryRef: {
      /** @description Unique identifier of a related entity. */
      id: string;
      /** @description Reference of the related entity. */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description Category version */
      version?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /**
     * @description Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.
     * A ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification.
     */
    ResourceSpecification: {
      /** @description Unique identifier of this REST resource */
      id?: string;
      /** @description Hyperlink reference to this REST resource */
      href?: string;
      /** @description Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic, L2Network and so on. */
      category?: string;
      /** @description Description of this REST resource */
      description?: string;
      /** @description A flag indicates that if this resource specification is a bundled specification (true) or single (false). */
      isBundle?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update of this REST resource
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status of the resource specification */
      lifecycleStatus?: string;
      /** @description Name given to this REST resource */
      name?: string;
      /** @description Resource Specification version */
      version?: string;
      /** @description Complements the description of an element (for instance a resource) through video, pictures ... */
      attachment?: components["schemas"]["AttachmentRefOrValue"][];
      /** @description A list of Features for this specification. */
      featureSpecification?: components["schemas"]["FeatureSpecification"][];
      /** @description A related party defines party or party role linked to a specific entity. */
      relatedParty?: components["schemas"]["RelatedParty"][];
      /** @description A characteristic quality or distinctive feature of a ResourceSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process. */
      resourceSpecCharacteristic?: components["schemas"]["ResourceSpecificationCharacteristic"][];
      /** @description A migration, substitution, dependency or exclusivity relationship between/among resource specifications. */
      resourceSpecRelationship?: components["schemas"]["ResourceSpecificationRelationship"][];
      targetResourceSchema?: components["schemas"]["TargetResourceSchema"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /**
     * @description Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.
     * A ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification.
     * Skipped properties: id,href
     */
    ResourceSpecification_Create: {
      /** @description Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic, L2Network and so on. */
      category?: string;
      /** @description Description of this REST resource */
      description?: string;
      /** @description A flag indicates that if this resource specification is a bundled specification (true) or single (false). */
      isBundle?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update of this REST resource
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status of the resource specification */
      lifecycleStatus?: string;
      /** @description Name given to this REST resource */
      name: string;
      /** @description Resource Specification version */
      version?: string;
      /** @description Complements the description of an element (for instance a resource) through video, pictures ... */
      attachment?: components["schemas"]["AttachmentRefOrValue"][];
      /** @description A list of Features for this specification. */
      featureSpecification?: components["schemas"]["FeatureSpecification"][];
      /** @description A related party defines party or party role linked to a specific entity. */
      relatedParty?: components["schemas"]["RelatedParty"][];
      /** @description A characteristic quality or distinctive feature of a ResourceSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process. */
      resourceSpecCharacteristic?: components["schemas"]["ResourceSpecificationCharacteristic"][];
      /** @description A migration, substitution, dependency or exclusivity relationship between/among resource specifications. */
      resourceSpecRelationship?: components["schemas"]["ResourceSpecificationRelationship"][];
      targetResourceSchema?: components["schemas"]["TargetResourceSchema"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /**
     * @description Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.
     * A ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification.
     * Skipped properties: id,href
     */
    ResourceSpecification_Update: {
      /** @description Category of the target resource like NetworkConnectivity, PhysicalLinks, Generic, L2Network and so on. */
      category?: string;
      /** @description Description of this REST resource */
      description?: string;
      /** @description A flag indicates that if this resource specification is a bundled specification (true) or single (false). */
      isBundle?: boolean;
      /**
       * Format: date-time
       * @description Date and time of the last update of this REST resource
       */
      lastUpdate?: string;
      /** @description Used to indicate the current lifecycle status of the resource specification */
      lifecycleStatus?: string;
      /** @description Name given to this REST resource */
      name?: string;
      /** @description Resource Specification version */
      version?: string;
      /** @description Complements the description of an element (for instance a resource) through video, pictures ... */
      attachment?: components["schemas"]["AttachmentRefOrValue"][];
      /** @description A list of Features for this specification. */
      featureSpecification?: components["schemas"]["FeatureSpecification"][];
      /** @description A related party defines party or party role linked to a specific entity. */
      relatedParty?: components["schemas"]["RelatedParty"][];
      /** @description A characteristic quality or distinctive feature of a ResourceSpecification.  The characteristic can be take on a discrete value, such as color, can take on a range of values, (for example, sensitivity of 100-240 mV), or can be derived from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain characteristics, such as color, may be configured during the ordering or some other process. */
      resourceSpecCharacteristic?: components["schemas"]["ResourceSpecificationCharacteristic"][];
      /** @description A migration, substitution, dependency or exclusivity relationship between/among resource specifications. */
      resourceSpecRelationship?: components["schemas"]["ResourceSpecificationRelationship"][];
      targetResourceSchema?: components["schemas"]["TargetResourceSchema"];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /**
     * @description This class defines the characteristic features of a resource specification. Every ResourceSpecification has a variety of important attributes, methods, constraints, and
     * relationships, which distinguish a resource specification from other resource specifications.
     */
    ResourceSpecificationCharacteristic: {
      /** @description Unique ID for the characteristic */
      id?: string;
      /** @description If true, the Boolean indicates that the ResourceSpecCharacteristic is configurable */
      configurable?: boolean;
      /** @description A narrative that explains the CharacteristicSpecification. */
      description?: string;
      /** @description An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for a resource. */
      extensible?: boolean;
      /** @description An indicator that specifies if a value is unique for the specification. Possible values are; "unique while value is in effect" and "unique whether value is in effect or not" */
      isUnique?: boolean;
      /** @description The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality. */
      maxCardinality?: number;
      /** @description The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality. */
      minCardinality?: number;
      /** @description A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications. */
      name?: string;
      /** @description A rule or principle represented in regular expression used to derive the value of a characteristic value. */
      regex?: string;
      /** @description A kind of value that the characteristic can take on, such as numeric, text and so forth */
      valueType?: string;
      /** @description An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics. */
      resourceSpecCharRelationship?: components["schemas"]["ResourceSpecificationCharacteristicRelationship"][];
      /** @description A ResourceSpecificationCharacteristicValue object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a ResourceSpecificationCharacteristic object. The values of the attributes in the ResourceSpecificationCharacteristicValue object describe the values of the attributes that a corresponding ResourceSpecificationCharacteristic object can take on. */
      resourceSpecCharacteristicValue?: components["schemas"]["ResourceSpecificationCharacteristicValue"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
      /** @description This (optional) field provides a link to the schema describing the value type. */
      "@valueSchemaLocation"?: string;
    };
    /** @description An aggregation, migration, substitution, dependency or exclusivity relationship between/among ResourceSpecificationCharacteristics. The specification characteristic is embedded within the specification whose ID and href are in this entity, and identified by its ID. */
    ResourceSpecificationCharacteristicRelationship: {
      /** @description Unique identifier of the characteristic within the specification */
      characteristicSpecificationId?: string;
      /** @description Name of the target characteristic within the specification */
      name?: string;
      /** @description Type of relationship such as aggregation, migration, substitution, dependency, exclusivity */
      relationshipType?: string;
      /** @description Hyperlink reference to the resource specification containing the target characteristic */
      resourceSpecificationHref?: string;
      /** @description Unique identifier of the resource specification containing the target characteristic */
      resourceSpecificationId?: string;
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /** @description A number or text that can be assigned to a ResourceSpecCharacteristic. */
    ResourceSpecificationCharacteristicValue: {
      /** @description If true, the Boolean Indicates if the value is the default value for a characteristic */
      isDefault?: boolean;
      /** @description An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are "open", "closed", "closedBottom" and "closedTop". */
      rangeInterval?: string;
      /** @description A regular expression constraint for given value */
      regex?: string;
      /** @description A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot. */
      unitOfMeasure?: string;
      /** @description The low range value that a characteristic can take on */
      valueFrom?: number;
      /** @description The upper range value that a characteristic can take on */
      valueTo?: number;
      /** @description A kind of value that the characteristic value can take on, such as numeric, text and so forth */
      valueType?: string;
      validFor?: components["schemas"]["TimePeriod"];
      value?: components["schemas"]["Any"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /**
     * @description Resources are physical or non-physical components (or some combination of these) within an enterprise's infrastructure or inventory. They are typically consumed or used by services (for example a physical port assigned to a service) or contribute to the realization of a Product (for example, a SIM card). They can be drawn from the Application, Computing and Network domains, and include, for example, Network Elements, software, IT systems, content and information, and technology components.
     * A ResourceSpecification is an abstract base class for representing a generic means for implementing a particular type of Resource. In essence, a ResourceSpecification defines the common attributes and relationships of a set of related Resources, while Resource defines a specific instance that is based on a particular ResourceSpecification.
     */
    ResourceSpecificationRef: {
      /** @description Unique identifier of a related entity. */
      id: string;
      /** @description Reference of the related entity. */
      href?: string;
      /** @description Name of the related entity. */
      name?: string;
      /** @description Resource Specification version */
      version?: string;
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
      /** @description The actual type of the target instance when needed for disambiguation. */
      "@referredType"?: string;
    };
    /** @description A migration, substitution, dependency or exclusivity relationship between/among resource specifications. */
    ResourceSpecificationRelationship: {
      /** @description Unique identifier of target ResourceSpecification */
      id?: string;
      /** @description Reference of the target ResourceSpecification */
      href?: string;
      /** @description The default number of the related resource that should be instantiated, for example a rack would typically have 4 cards, although it could support more. */
      defaultQuantity?: number;
      /** @description The maximum number of the related resource that should be instantiated, for example a rack supports a maximum of 16 cards */
      maximumQuantity?: number;
      /** @description The minimum number of the related resource that should be instantiated, for example a rack must have at least 1 card */
      minimumQuantity?: number;
      /** @description The name given to the target resource specification instance */
      name?: string;
      /** @description Type of relationship such as migration, substitution, dependency, exclusivity */
      relationshipType?: string;
      /** @description The association role for this resource specification */
      role?: string;
      /** @description A characteristic that refines the relationship. For example, consider the relationship between a slot and a card. For a half-height card it is important to know the position at which the card is inserted, so a characteristic Position might be defined on the relationship to allow capturing of this in the inventory */
      characteristic?: components["schemas"]["ResourceSpecificationCharacteristic"][];
      validFor?: components["schemas"]["TimePeriod"];
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name */
      "@type"?: string;
    };
    /** @description The reference object to the schema and type of target resource which is described by resource specification */
    TargetResourceSchema: {
      /** @description When sub-classing, this defines the super-class */
      "@baseType"?: string;
      /** @description This field provides a link to the schema describing the target resource */
      "@schemaLocation": string;
      /** @description Class type of the target resource */
      "@type": string;
    };
    /** @description A period of time, either as a deadline (endDateTime only) a startDateTime only, or both */
    TimePeriod: {
      /**
       * Format: date-time
       * @description End of the time period, using IETC-RFC-3339 format
       */
      endDateTime?: string;
      /**
       * Format: date-time
       * @description Start of the time period, using IETC-RFC-3339 format. If you define a start, you must also define an end
       */
      startDateTime?: string;
    };
    /** @description Sets the communication endpoint address the service instance must use to deliver notification information */
    EventSubscription: {
      /** @description Id of the listener */
      id: string;
      /** @description The callback being registered. */
      callback: string;
      /** @description additional data to be passed */
      query?: string;
    };
    /** @description Sets the communication endpoint address the service instance must use to deliver notification information */
    EventSubscriptionInput: {
      /** @description The callback being registered. */
      callback: string;
      /** @description additional data to be passed */
      query?: string;
    };
    /** @description The notification data structure */
    ResourceCatalogCreateEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ResourceCatalogCreateEventPayload"];
    };
    /** @description The event data structure */
    ResourceCatalogCreateEventPayload: {
      resourceCatalog?: components["schemas"]["ResourceCatalog"];
    };
    /** @description The notification data structure */
    ResourceCatalogChangeEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ResourceCatalogChangeEventPayload"];
    };
    /** @description The event data structure */
    ResourceCatalogChangeEventPayload: {
      resourceCatalog?: components["schemas"]["ResourceCatalog"];
    };
    /** @description The notification data structure */
    ResourceCatalogDeleteEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ResourceCatalogDeleteEventPayload"];
    };
    /** @description The event data structure */
    ResourceCatalogDeleteEventPayload: {
      resourceCatalog?: components["schemas"]["ResourceCatalog"];
    };
    /** @description The notification data structure */
    ResourceCategoryCreateEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ResourceCategoryCreateEventPayload"];
    };
    /** @description The event data structure */
    ResourceCategoryCreateEventPayload: {
      resourceCategory?: components["schemas"]["ResourceCategory"];
    };
    /** @description The notification data structure */
    ResourceCategoryChangeEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ResourceCategoryChangeEventPayload"];
    };
    /** @description The event data structure */
    ResourceCategoryChangeEventPayload: {
      resourceCategory?: components["schemas"]["ResourceCategory"];
    };
    /** @description The notification data structure */
    ResourceCategoryDeleteEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ResourceCategoryDeleteEventPayload"];
    };
    /** @description The event data structure */
    ResourceCategoryDeleteEventPayload: {
      resourceCategory?: components["schemas"]["ResourceCategory"];
    };
    /** @description The notification data structure */
    ResourceCandidateCreateEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ResourceCandidateCreateEventPayload"];
    };
    /** @description The event data structure */
    ResourceCandidateCreateEventPayload: {
      resourceCandidate?: components["schemas"]["ResourceCandidate"];
    };
    /** @description The notification data structure */
    ResourceCandidateChangeEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ResourceCandidateChangeEventPayload"];
    };
    /** @description The event data structure */
    ResourceCandidateChangeEventPayload: {
      resourceCandidate?: components["schemas"]["ResourceCandidate"];
    };
    /** @description The notification data structure */
    ResourceCandidateDeleteEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ResourceCandidateDeleteEventPayload"];
    };
    /** @description The event data structure */
    ResourceCandidateDeleteEventPayload: {
      resourceCandidate?: components["schemas"]["ResourceCandidate"];
    };
    /** @description The notification data structure */
    ResourceSpecificationCreateEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ResourceSpecificationCreateEventPayload"];
    };
    /** @description The event data structure */
    ResourceSpecificationCreateEventPayload: {
      resourceSpecification?: components["schemas"]["ResourceSpecification"];
    };
    /** @description The notification data structure */
    ResourceSpecificationChangeEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ResourceSpecificationChangeEventPayload"];
    };
    /** @description The event data structure */
    ResourceSpecificationChangeEventPayload: {
      resourceSpecification?: components["schemas"]["ResourceSpecification"];
    };
    /** @description The notification data structure */
    ResourceSpecificationDeleteEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ResourceSpecificationDeleteEventPayload"];
    };
    /** @description The event data structure */
    ResourceSpecificationDeleteEventPayload: {
      resourceSpecification?: components["schemas"]["ResourceSpecification"];
    };
    /** @description The notification data structure */
    ImportJobCreateEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ImportJobCreateEventPayload"];
    };
    /** @description The event data structure */
    ImportJobCreateEventPayload: {
      importJob?: components["schemas"]["ImportJob"];
    };
    /** @description The notification data structure */
    ImportJobStateChangeEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ImportJobStateChangeEventPayload"];
    };
    /** @description The event data structure */
    ImportJobStateChangeEventPayload: {
      importJob?: components["schemas"]["ImportJob"];
    };
    /** @description The notification data structure */
    ExportJobCreateEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ExportJobCreateEventPayload"];
    };
    /** @description The event data structure */
    ExportJobCreateEventPayload: {
      exportJob?: components["schemas"]["ExportJob"];
    };
    /** @description The notification data structure */
    ExportJobStateChangeEvent: {
      /** @description Identifier of the Process flow */
      id?: string;
      /** @description Reference of the ProcessFlow */
      href?: string;
      /** @description The identifier of the notification. */
      eventId?: string;
      /**
       * Format: date-time
       * @description Time of the event occurrence.
       */
      eventTime?: string;
      /** @description The type of the notification. */
      eventType?: string;
      /** @description The correlation id for this event. */
      correlationId?: string;
      /** @description The domain of the event. */
      domain?: string;
      /** @description The title of the event. */
      title?: string;
      /** @description An explnatory of the event. */
      description?: string;
      /** @description A priority. */
      priority?: string;
      /**
       * Format: date-time
       * @description The time the event occured.
       */
      timeOcurred?: string;
      event?: components["schemas"]["ExportJobStateChangeEventPayload"];
    };
    /** @description The event data structure */
    ExportJobStateChangeEventPayload: {
      exportJob?: components["schemas"]["ExportJob"];
    };
    /** @description Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx) */
    Error: {
      /** @description Application relevant detail, defined in the API or a common list. */
      code: string;
      /** @description Explanation of the reason for the error which can be shown to a client user. */
      reason: string;
      /** @description More details and corrective actions related to the error which can be shown to a client user. */
      message?: string;
      /** @description HTTP Error code extension */
      status?: string;
      /**
       * Format: uri
       * @description URI of documentation describing the error.
       */
      referenceError?: string;
      /** @description When sub-classing, this defines the super-class. */
      "@baseType"?: string;
      /**
       * Format: uri
       * @description A URI to a JSON-Schema file that defines additional attributes and relationships
       */
      "@schemaLocation"?: string;
      /** @description When sub-classing, this defines the sub-class entity name. */
      "@type"?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * List or find ResourceCatalog objects
   * @description This operation list or find ResourceCatalog entities
   */
  listResourceCatalog: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to be provided in response */
        fields?: string;
        /** @description Requested index for start of resources to be provided in response */
        offset?: number;
        /** @description Requested number of resources to be provided in response */
        limit?: number;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          /** @description Total number of items matching criteria */
          "X-Total-Count"?: number;
          /** @description Actual number of items returned in the response body */
          "X-Result-Count"?: number;
        };
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceCatalog"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Creates a ResourceCatalog
   * @description This operation creates a ResourceCatalog entity.
   */
  createResourceCatalog: {
    /** @description The ResourceCatalog to be created */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCatalog_Create"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceCatalog"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieves a ResourceCatalog by ID
   * @description This operation retrieves a ResourceCatalog entity. Attribute selection is enabled for all first level attributes.
   */
  retrieveResourceCatalog: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to provide in response */
        fields?: string;
      };
      path: {
        /** @description Identifier of the ResourceCatalog */
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceCatalog"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a ResourceCatalog
   * @description This operation deletes a ResourceCatalog entity.
   */
  deleteResourceCatalog: {
    parameters: {
      path: {
        /** @description Identifier of the ResourceCatalog */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates partially a ResourceCatalog
   * @description This operation updates partially a ResourceCatalog entity.
   */
  patchResourceCatalog: {
    parameters: {
      path: {
        /** @description Identifier of the ResourceCatalog */
        id: string;
      };
    };
    /** @description The ResourceCatalog to be updated */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCatalog_Update"];
      };
    };
    responses: {
      /** @description Updated */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceCatalog"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * List or find ResourceCategory objects
   * @description This operation list or find ResourceCategory entities
   */
  listResourceCategory: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to be provided in response */
        fields?: string;
        /** @description Requested index for start of resources to be provided in response */
        offset?: number;
        /** @description Requested number of resources to be provided in response */
        limit?: number;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          /** @description Total number of items matching criteria */
          "X-Total-Count"?: number;
          /** @description Actual number of items returned in the response body */
          "X-Result-Count"?: number;
        };
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceCategory"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Creates a ResourceCategory
   * @description This operation creates a ResourceCategory entity.
   */
  createResourceCategory: {
    /** @description The ResourceCategory to be created */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCategory_Create"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceCategory"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieves a ResourceCategory by ID
   * @description This operation retrieves a ResourceCategory entity. Attribute selection is enabled for all first level attributes.
   */
  retrieveResourceCategory: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to provide in response */
        fields?: string;
      };
      path: {
        /** @description Identifier of the ResourceCategory */
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceCategory"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a ResourceCategory
   * @description This operation deletes a ResourceCategory entity.
   */
  deleteResourceCategory: {
    parameters: {
      path: {
        /** @description Identifier of the ResourceCategory */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates partially a ResourceCategory
   * @description This operation updates partially a ResourceCategory entity.
   */
  patchResourceCategory: {
    parameters: {
      path: {
        /** @description Identifier of the ResourceCategory */
        id: string;
      };
    };
    /** @description The ResourceCategory to be updated */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCategory_Update"];
      };
    };
    responses: {
      /** @description Updated */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceCategory"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * List or find ResourceCandidate objects
   * @description This operation list or find ResourceCandidate entities
   */
  listResourceCandidate: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to be provided in response */
        fields?: string;
        /** @description Requested index for start of resources to be provided in response */
        offset?: number;
        /** @description Requested number of resources to be provided in response */
        limit?: number;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          /** @description Total number of items matching criteria */
          "X-Total-Count"?: number;
          /** @description Actual number of items returned in the response body */
          "X-Result-Count"?: number;
        };
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceCandidate"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Creates a ResourceCandidate
   * @description This operation creates a ResourceCandidate entity.
   */
  createResourceCandidate: {
    /** @description The ResourceCandidate to be created */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCandidate_Create"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceCandidate"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieves a ResourceCandidate by ID
   * @description This operation retrieves a ResourceCandidate entity. Attribute selection is enabled for all first level attributes.
   */
  retrieveResourceCandidate: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to provide in response */
        fields?: string;
      };
      path: {
        /** @description Identifier of the ResourceCandidate */
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceCandidate"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a ResourceCandidate
   * @description This operation deletes a ResourceCandidate entity.
   */
  deleteResourceCandidate: {
    parameters: {
      path: {
        /** @description Identifier of the ResourceCandidate */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates partially a ResourceCandidate
   * @description This operation updates partially a ResourceCandidate entity.
   */
  patchResourceCandidate: {
    parameters: {
      path: {
        /** @description Identifier of the ResourceCandidate */
        id: string;
      };
    };
    /** @description The ResourceCandidate to be updated */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCandidate_Update"];
      };
    };
    responses: {
      /** @description Updated */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceCandidate"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * List or find ResourceSpecification objects
   * @description This operation list or find ResourceSpecification entities
   */
  listResourceSpecification: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to be provided in response */
        fields?: string;
        /** @description Requested index for start of resources to be provided in response */
        offset?: number;
        /** @description Requested number of resources to be provided in response */
        limit?: number;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          /** @description Total number of items matching criteria */
          "X-Total-Count"?: number;
          /** @description Actual number of items returned in the response body */
          "X-Result-Count"?: number;
        };
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceSpecification"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Creates a ResourceSpecification
   * @description This operation creates a ResourceSpecification entity.
   */
  createResourceSpecification: {
    /** @description The ResourceSpecification to be created */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceSpecification_Create"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceSpecification"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieves a ResourceSpecification by ID
   * @description This operation retrieves a ResourceSpecification entity. Attribute selection is enabled for all first level attributes.
   */
  retrieveResourceSpecification: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to provide in response */
        fields?: string;
      };
      path: {
        /** @description Identifier of the ResourceSpecification */
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceSpecification"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a ResourceSpecification
   * @description This operation deletes a ResourceSpecification entity.
   */
  deleteResourceSpecification: {
    parameters: {
      path: {
        /** @description Identifier of the ResourceSpecification */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Updates partially a ResourceSpecification
   * @description This operation updates partially a ResourceSpecification entity.
   */
  patchResourceSpecification: {
    parameters: {
      path: {
        /** @description Identifier of the ResourceSpecification */
        id: string;
      };
    };
    /** @description The ResourceSpecification to be updated */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceSpecification_Update"];
      };
    };
    responses: {
      /** @description Updated */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ResourceSpecification"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * List or find ImportJob objects
   * @description This operation list or find ImportJob entities
   */
  listImportJob: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to be provided in response */
        fields?: string;
        /** @description Requested index for start of resources to be provided in response */
        offset?: number;
        /** @description Requested number of resources to be provided in response */
        limit?: number;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          /** @description Total number of items matching criteria */
          "X-Total-Count"?: number;
          /** @description Actual number of items returned in the response body */
          "X-Result-Count"?: number;
        };
        content: {
          "application/json;charset=utf-8": components["schemas"]["ImportJob"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Creates a ImportJob
   * @description This operation creates a ImportJob entity.
   */
  createImportJob: {
    /** @description The ImportJob to be created */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ImportJob_Create"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ImportJob"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieves a ImportJob by ID
   * @description This operation retrieves a ImportJob entity. Attribute selection is enabled for all first level attributes.
   */
  retrieveImportJob: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to provide in response */
        fields?: string;
      };
      path: {
        /** @description Identifier of the ImportJob */
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ImportJob"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a ImportJob
   * @description This operation deletes a ImportJob entity.
   */
  deleteImportJob: {
    parameters: {
      path: {
        /** @description Identifier of the ImportJob */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * List or find ExportJob objects
   * @description This operation list or find ExportJob entities
   */
  listExportJob: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to be provided in response */
        fields?: string;
        /** @description Requested index for start of resources to be provided in response */
        offset?: number;
        /** @description Requested number of resources to be provided in response */
        limit?: number;
      };
    };
    responses: {
      /** @description Success */
      200: {
        headers: {
          /** @description Total number of items matching criteria */
          "X-Total-Count"?: number;
          /** @description Actual number of items returned in the response body */
          "X-Result-Count"?: number;
        };
        content: {
          "application/json;charset=utf-8": components["schemas"]["ExportJob"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Creates a ExportJob
   * @description This operation creates a ExportJob entity.
   */
  createExportJob: {
    /** @description The ExportJob to be created */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ExportJob_Create"];
      };
    };
    responses: {
      /** @description Created */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ExportJob"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Retrieves a ExportJob by ID
   * @description This operation retrieves a ExportJob entity. Attribute selection is enabled for all first level attributes.
   */
  retrieveExportJob: {
    parameters: {
      query?: {
        /** @description Comma-separated properties to provide in response */
        fields?: string;
      };
      path: {
        /** @description Identifier of the ExportJob */
        id: string;
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["ExportJob"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Deletes a ExportJob
   * @description This operation deletes a ExportJob entity.
   */
  deleteExportJob: {
    parameters: {
      path: {
        /** @description Identifier of the ExportJob */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Register a listener
   * @description Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
   */
  registerListener: {
    /** @description Data containing the callback endpoint to deliver the information */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["EventSubscriptionInput"];
      };
    };
    responses: {
      /** @description Subscribed */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Unregister a listener
   * @description Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
   */
  unregisterListener: {
    parameters: {
      path: {
        /** @description The id of the registered listener */
        id: string;
      };
    };
    responses: {
      /** @description Deleted */
      204: {
        content: {
        };
      };
      /** @description Bad request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ResourceCatalogCreateEvent
   * @description Example of a client listener for receiving the notification ResourceCatalogCreateEvent
   */
  listenToResourceCatalogCreateEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCatalogCreateEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ResourceCatalogChangeEvent
   * @description Example of a client listener for receiving the notification ResourceCatalogChangeEvent
   */
  listenToResourceCatalogChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCatalogChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ResourceCatalogDeleteEvent
   * @description Example of a client listener for receiving the notification ResourceCatalogDeleteEvent
   */
  listenToResourceCatalogDeleteEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCatalogDeleteEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ResourceCategoryCreateEvent
   * @description Example of a client listener for receiving the notification ResourceCategoryCreateEvent
   */
  listenToResourceCategoryCreateEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCategoryCreateEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ResourceCategoryChangeEvent
   * @description Example of a client listener for receiving the notification ResourceCategoryChangeEvent
   */
  listenToResourceCategoryChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCategoryChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ResourceCategoryDeleteEvent
   * @description Example of a client listener for receiving the notification ResourceCategoryDeleteEvent
   */
  listenToResourceCategoryDeleteEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCategoryDeleteEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ResourceCandidateCreateEvent
   * @description Example of a client listener for receiving the notification ResourceCandidateCreateEvent
   */
  listenToResourceCandidateCreateEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCandidateCreateEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ResourceCandidateChangeEvent
   * @description Example of a client listener for receiving the notification ResourceCandidateChangeEvent
   */
  listenToResourceCandidateChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCandidateChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ResourceCandidateDeleteEvent
   * @description Example of a client listener for receiving the notification ResourceCandidateDeleteEvent
   */
  listenToResourceCandidateDeleteEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceCandidateDeleteEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ResourceSpecificationCreateEvent
   * @description Example of a client listener for receiving the notification ResourceSpecificationCreateEvent
   */
  listenToResourceSpecificationCreateEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceSpecificationCreateEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ResourceSpecificationChangeEvent
   * @description Example of a client listener for receiving the notification ResourceSpecificationChangeEvent
   */
  listenToResourceSpecificationChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceSpecificationChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ResourceSpecificationDeleteEvent
   * @description Example of a client listener for receiving the notification ResourceSpecificationDeleteEvent
   */
  listenToResourceSpecificationDeleteEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ResourceSpecificationDeleteEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ImportJobCreateEvent
   * @description Example of a client listener for receiving the notification ImportJobCreateEvent
   */
  listenToImportJobCreateEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ImportJobCreateEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ImportJobStateChangeEvent
   * @description Example of a client listener for receiving the notification ImportJobStateChangeEvent
   */
  listenToImportJobStateChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ImportJobStateChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ExportJobCreateEvent
   * @description Example of a client listener for receiving the notification ExportJobCreateEvent
   */
  listenToExportJobCreateEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ExportJobCreateEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
  /**
   * Client listener for entity ExportJobStateChangeEvent
   * @description Example of a client listener for receiving the notification ExportJobStateChangeEvent
   */
  listenToExportJobStateChangeEvent: {
    /** @description The event data */
    requestBody: {
      content: {
        "application/json;charset=utf-8": components["schemas"]["ExportJobStateChangeEvent"];
      };
    };
    responses: {
      /** @description Notified */
      201: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["EventSubscription"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Method Not allowed */
      405: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Conflict */
      409: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json;charset=utf-8": components["schemas"]["Error"];
        };
      };
    };
  };
}
